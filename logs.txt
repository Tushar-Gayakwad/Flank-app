* 
* ==> Audit <==
* |-----------|-------------------------|----------|---------|---------|---------------------|---------------------|
|  Command  |          Args           | Profile  |  User   | Version |     Start Time      |      End Time       |
|-----------|-------------------------|----------|---------|---------|---------------------|---------------------|
| start     |                         | minikube | pulse02 | v1.32.0 | 24 May 24 16:57 IST | 24 May 24 16:58 IST |
| start     | --addons=ingress        | minikube | pulse02 | v1.32.0 | 24 May 24 17:00 IST | 24 May 24 17:02 IST |
| start     |                         | minikube | pulse02 | v1.32.0 | 19 Jun 24 12:55 IST | 19 Jun 24 12:56 IST |
| start     |                         | minikube | pulse02 | v1.32.0 | 19 Jun 24 13:11 IST |                     |
| stop      |                         | minikube | pulse02 | v1.32.0 | 19 Jun 24 13:11 IST | 19 Jun 24 13:11 IST |
| start     |                         | minikube | pulse02 | v1.32.0 | 19 Jun 24 13:11 IST | 19 Jun 24 13:12 IST |
| addons    | enable metrics-server   | minikube | pulse02 | v1.32.0 | 19 Jun 24 13:16 IST | 19 Jun 24 13:16 IST |
| start     |                         | minikube | pulse02 | v1.32.0 | 19 Jun 24 13:17 IST | 19 Jun 24 13:18 IST |
| config    | view                    | minikube | pulse02 | v1.32.0 | 19 Jun 24 13:21 IST | 19 Jun 24 13:21 IST |
| config    |                         | minikube | pulse02 | v1.32.0 | 19 Jun 24 13:21 IST | 19 Jun 24 13:21 IST |
| config    |                         | minikube | pulse02 | v1.32.0 | 19 Jun 24 13:21 IST | 19 Jun 24 13:21 IST |
| config    | set driver hyperkit     | minikube | pulse02 | v1.32.0 | 19 Jun 24 13:21 IST |                     |
| config    |                         | minikube | pulse02 | v1.32.0 | 19 Jun 24 15:27 IST | 19 Jun 24 15:27 IST |
| config    |                         | minikube | pulse02 | v1.32.0 | 19 Jun 24 15:27 IST | 19 Jun 24 15:27 IST |
| start     |                         | minikube | pulse02 | v1.32.0 | 19 Jun 24 15:27 IST | 19 Jun 24 15:28 IST |
| start     |                         | minikube | pulse02 | v1.32.0 | 19 Jun 24 16:11 IST | 19 Jun 24 16:12 IST |
| stop      |                         | minikube | pulse02 | v1.32.0 | 19 Jun 24 16:12 IST | 19 Jun 24 16:12 IST |
| start     |                         | minikube | pulse02 | v1.32.0 | 19 Jun 24 16:13 IST | 19 Jun 24 16:14 IST |
| start     | --driver=Spundan        | minikube | pulse02 | v1.32.0 | 19 Jun 24 16:42 IST |                     |
| start     |                         | minikube | pulse02 | v1.32.0 | 19 Jun 24 18:18 IST | 19 Jun 24 18:19 IST |
| stop      |                         | minikube | pulse02 | v1.32.0 | 19 Jun 24 18:58 IST | 19 Jun 24 18:59 IST |
| start     |                         | minikube | pulse02 | v1.32.0 | 19 Jun 24 19:03 IST | 19 Jun 24 19:04 IST |
| start     |                         | minikube | pulse02 | v1.32.0 | 24 Jun 24 13:23 IST | 24 Jun 24 13:24 IST |
| start     |                         | minikube | pulse02 | v1.32.0 | 25 Jun 24 16:39 IST | 25 Jun 24 16:40 IST |
| start     |                         | minikube | pulse02 | v1.32.0 | 26 Jun 24 17:14 IST | 26 Jun 24 17:16 IST |
| start     |                         | minikube | pulse02 | v1.32.0 | 27 Jun 24 11:57 IST | 27 Jun 24 11:59 IST |
| start     |                         | minikube | pulse02 | v1.32.0 | 27 Jun 24 14:13 IST | 27 Jun 24 14:15 IST |
| start     |                         | minikube | pulse02 | v1.32.0 | 29 Jun 24 11:24 IST | 29 Jun 24 11:26 IST |
| start     |                         | minikube | pulse02 | v1.32.0 | 02 Jul 24 13:17 IST | 02 Jul 24 13:18 IST |
| start     |                         | minikube | pulse02 | v1.32.0 | 16 Jul 24 17:12 IST | 16 Jul 24 17:13 IST |
| ssh       |                         | minikube | pulse02 | v1.32.0 | 17 Jul 24 10:52 IST | 17 Jul 24 10:52 IST |
| stop      |                         | minikube | pulse02 | v1.32.0 | 17 Jul 24 12:53 IST | 17 Jul 24 12:53 IST |
| dashboard |                         | minikube | pulse02 | v1.32.0 | 17 Jul 24 13:47 IST |                     |
| start     |                         | minikube | pulse02 | v1.32.0 | 17 Jul 24 13:47 IST | 17 Jul 24 13:48 IST |
| dashboard |                         | minikube | pulse02 | v1.32.0 | 17 Jul 24 13:48 IST |                     |
| service   | java-deployment --url   | minikube | pulse02 | v1.32.0 | 17 Jul 24 15:25 IST | 17 Jul 24 15:25 IST |
| start     |                         | minikube | pulse02 | v1.32.0 | 18 Jul 24 14:59 IST | 18 Jul 24 15:00 IST |
| service   | java-deployment --url   | minikube | pulse02 | v1.32.0 | 18 Jul 24 15:07 IST | 18 Jul 24 15:07 IST |
| service   | java-deployment --url   | minikube | pulse02 | v1.32.0 | 18 Jul 24 15:08 IST | 18 Jul 24 15:08 IST |
| start     |                         | minikube | pulse02 | v1.32.0 | 19 Jul 24 16:03 IST | 19 Jul 24 16:04 IST |
| service   | node-service --url      | minikube | pulse02 | v1.32.0 | 19 Jul 24 16:21 IST | 19 Jul 24 16:21 IST |
| service   | node-service --url      | minikube | pulse02 | v1.32.0 | 19 Jul 24 16:22 IST | 19 Jul 24 16:22 IST |
| start     |                         | minikube | pulse02 | v1.32.0 | 20 Jul 24 10:51 IST | 20 Jul 24 10:52 IST |
| service   | java-deployment --url   | minikube | pulse02 | v1.32.0 | 20 Jul 24 11:21 IST | 20 Jul 24 11:21 IST |
| service   | python-service --url    | minikube | pulse02 | v1.32.0 | 22 Jul 24 14:27 IST |                     |
| service   | python-service --url    | minikube | pulse02 | v1.32.0 | 22 Jul 24 14:28 IST | 22 Jul 24 14:28 IST |
| service   | python-service --url    | minikube | pulse02 | v1.32.0 | 22 Jul 24 16:01 IST | 22 Jul 24 16:01 IST |
| service   | python-service --url    | minikube | pulse02 | v1.32.0 | 22 Jul 24 16:40 IST | 22 Jul 24 16:40 IST |
| service   | python-service --url    | minikube | pulse02 | v1.32.0 | 22 Jul 24 16:47 IST | 22 Jul 24 16:47 IST |
| service   | python-backend-1 --url  | minikube | pulse02 | v1.32.0 | 22 Jul 24 16:47 IST |                     |
| service   | python-service --url    | minikube | pulse02 | v1.32.0 | 22 Jul 24 16:50 IST | 22 Jul 24 16:50 IST |
| service   | python-deployment --url | minikube | pulse02 | v1.32.0 | 22 Jul 24 17:14 IST | 22 Jul 24 17:14 IST |
| service   | python-deployment --url | minikube | pulse02 | v1.32.0 | 22 Jul 24 17:19 IST | 22 Jul 24 17:19 IST |
| service   | python-service --url    | minikube | pulse02 | v1.32.0 | 22 Jul 24 17:22 IST | 22 Jul 24 17:22 IST |
| service   | python-service --url    | minikube | pulse02 | v1.32.0 | 22 Jul 24 17:55 IST | 22 Jul 24 17:55 IST |
| service   | python-service --url    | minikube | pulse02 | v1.32.0 | 22 Jul 24 18:03 IST | 22 Jul 24 18:03 IST |
| stop      |                         | minikube | pulse02 | v1.32.0 | 23 Jul 24 12:31 IST | 23 Jul 24 12:31 IST |
| start     |                         | minikube | pulse02 | v1.32.0 | 23 Jul 24 12:31 IST |                     |
| stop      |                         | minikube | pulse02 | v1.32.0 | 23 Jul 24 12:33 IST | 23 Jul 24 12:34 IST |
| start     |                         | minikube | pulse02 | v1.32.0 | 23 Jul 24 12:34 IST |                     |
|-----------|-------------------------|----------|---------|---------|---------------------|---------------------|

* 
* ==> Last Start <==
* Log file created at: 2024/07/23 12:34:07
Running on machine: pulse02
Binary: Built with gc go1.21.3 for linux/amd64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
I0723 12:34:07.975984 2614518 out.go:296] Setting OutFile to fd 1 ...
I0723 12:34:07.976102 2614518 out.go:348] isatty.IsTerminal(1) = true
I0723 12:34:07.976109 2614518 out.go:309] Setting ErrFile to fd 2...
I0723 12:34:07.976118 2614518 out.go:348] isatty.IsTerminal(2) = true
I0723 12:34:07.976311 2614518 root.go:338] Updating PATH: /home/pulse02/.minikube/bin
W0723 12:34:07.976415 2614518 root.go:314] Error reading config file at /home/pulse02/.minikube/config/config.json: open /home/pulse02/.minikube/config/config.json: no such file or directory
I0723 12:34:07.976809 2614518 out.go:303] Setting JSON to false
I0723 12:34:07.978202 2614518 start.go:128] hostinfo: {"hostname":"pulse02","uptime":412523,"bootTime":1721305725,"procs":488,"os":"linux","platform":"ubuntu","platformFamily":"debian","platformVersion":"20.04","kernelVersion":"5.15.0-113-generic","kernelArch":"x86_64","virtualizationSystem":"kvm","virtualizationRole":"host","hostId":"7bc8d643-7f8b-425b-9ecc-942788f48020"}
I0723 12:34:07.978272 2614518 start.go:138] virtualization: kvm host
I0723 12:34:07.989082 2614518 out.go:177] 😄  minikube v1.32.0 on Ubuntu 20.04
I0723 12:34:08.004305 2614518 notify.go:220] Checking for updates...
I0723 12:34:08.015787 2614518 out.go:177]     ▪ KUBECONFIG=/etc/kubernetes/admin.conf
I0723 12:34:08.027883 2614518 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.28.3
I0723 12:34:08.027975 2614518 driver.go:378] Setting default libvirt URI to qemu:///system
I0723 12:34:08.051132 2614518 docker.go:122] docker version: linux-26.0.1:Docker Engine - Community
I0723 12:34:08.051220 2614518 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0723 12:34:08.114316 2614518 info.go:266] docker info: {ID:58f1421f-d3e8-4317-b06a-fad3ede8c54c Containers:128 ContainersRunning:3 ContainersPaused:0 ContainersStopped:125 Images:62 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:true CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:51 OomKillDisable:true NGoroutines:67 SystemTime:2024-07-23 12:34:08.104919955 +0530 IST LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:0 KernelVersion:5.15.0-113-generic OperatingSystem:Ubuntu 20.04.6 LTS OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:4 MemTotal:8224579584 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy: HTTPSProxy: NoProxy: Name:pulse02 Labels:[] ExperimentalBuild:false ServerVersion:26.0.1 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:e377cd56a71523140ca6ae87e30244719194a521 Expected:e377cd56a71523140ca6ae87e30244719194a521} RuncCommit:{ID:v1.1.12-0-g51d5e94 Expected:v1.1.12-0-g51d5e94} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=apparmor name=seccomp,profile=builtin] ProductLicense: Warnings:<nil> ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:/usr/libexec/docker/cli-plugins/docker-buildx SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.12.1] map[Name:compose Path:/usr/libexec/docker/cli-plugins/docker-compose SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.24.5]] Warnings:<nil>}}
I0723 12:34:08.114432 2614518 docker.go:295] overlay module found
I0723 12:34:08.120654 2614518 out.go:177] ✨  Using the docker driver based on existing profile
I0723 12:34:08.128647 2614518 start.go:298] selected driver: docker
I0723 12:34:08.128672 2614518 start.go:902] validating driver "docker" against &{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.28.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.28.3 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[dashboard:true default-storageclass:true ingress:true metrics-server:true storage-provisioner:true] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/pulse02:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 AutoPauseInterval:1m0s GPUs:}
I0723 12:34:08.128751 2614518 start.go:913] status for docker: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I0723 12:34:08.128839 2614518 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0723 12:34:08.194608 2614518 info.go:266] docker info: {ID:58f1421f-d3e8-4317-b06a-fad3ede8c54c Containers:128 ContainersRunning:3 ContainersPaused:0 ContainersStopped:125 Images:62 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:true CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:51 OomKillDisable:true NGoroutines:67 SystemTime:2024-07-23 12:34:08.1789099 +0530 IST LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:0 KernelVersion:5.15.0-113-generic OperatingSystem:Ubuntu 20.04.6 LTS OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:4 MemTotal:8224579584 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy: HTTPSProxy: NoProxy: Name:pulse02 Labels:[] ExperimentalBuild:false ServerVersion:26.0.1 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:e377cd56a71523140ca6ae87e30244719194a521 Expected:e377cd56a71523140ca6ae87e30244719194a521} RuncCommit:{ID:v1.1.12-0-g51d5e94 Expected:v1.1.12-0-g51d5e94} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=apparmor name=seccomp,profile=builtin] ProductLicense: Warnings:<nil> ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:/usr/libexec/docker/cli-plugins/docker-buildx SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.12.1] map[Name:compose Path:/usr/libexec/docker/cli-plugins/docker-compose SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.24.5]] Warnings:<nil>}}
I0723 12:34:08.196609 2614518 cni.go:84] Creating CNI manager for ""
I0723 12:34:08.196638 2614518 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0723 12:34:08.196655 2614518 start_flags.go:323] config:
{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.28.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.28.3 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[dashboard:true default-storageclass:true ingress:true metrics-server:true storage-provisioner:true] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/pulse02:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 AutoPauseInterval:1m0s GPUs:}
I0723 12:34:08.209355 2614518 out.go:177] 👍  Starting control plane node minikube in cluster minikube
I0723 12:34:08.220158 2614518 cache.go:121] Beginning downloading kic base image for docker with docker
I0723 12:34:08.231093 2614518 out.go:177] 🚜  Pulling base image ...
I0723 12:34:08.238813 2614518 preload.go:132] Checking if preload exists for k8s version v1.28.3 and runtime docker
I0723 12:34:08.238861 2614518 image.go:79] Checking for gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 in local docker daemon
I0723 12:34:08.238881 2614518 preload.go:148] Found local preload: /home/pulse02/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.28.3-docker-overlay2-amd64.tar.lz4
I0723 12:34:08.238889 2614518 cache.go:56] Caching tarball of preloaded images
I0723 12:34:08.239023 2614518 preload.go:174] Found /home/pulse02/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.28.3-docker-overlay2-amd64.tar.lz4 in cache, skipping download
I0723 12:34:08.239041 2614518 cache.go:59] Finished verifying existence of preloaded tar for  v1.28.3 on docker
I0723 12:34:08.239139 2614518 profile.go:148] Saving config to /home/pulse02/.minikube/profiles/minikube/config.json ...
I0723 12:34:08.271427 2614518 image.go:83] Found gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 in local docker daemon, skipping pull
I0723 12:34:08.271439 2614518 cache.go:144] gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 exists in daemon, skipping load
I0723 12:34:08.271456 2614518 cache.go:194] Successfully downloaded all kic artifacts
I0723 12:34:08.271488 2614518 start.go:365] acquiring machines lock for minikube: {Name:mkcd642d6dbcc55bdbe4276deb90b7c2a0f803d9 Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0723 12:34:08.271550 2614518 start.go:369] acquired machines lock for "minikube" in 40.369µs
I0723 12:34:08.271567 2614518 start.go:96] Skipping create...Using existing machine configuration
I0723 12:34:08.271571 2614518 fix.go:54] fixHost starting: 
I0723 12:34:08.271833 2614518 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0723 12:34:08.290682 2614518 fix.go:102] recreateIfNeeded on minikube: state=Stopped err=<nil>
W0723 12:34:08.290711 2614518 fix.go:128] unexpected machine state, will restart: <nil>
I0723 12:34:08.296800 2614518 out.go:177] 🔄  Restarting existing docker container for "minikube" ...
I0723 12:34:08.308305 2614518 cli_runner.go:164] Run: docker start minikube
I0723 12:34:08.951233 2614518 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0723 12:34:08.977245 2614518 kic.go:430] container "minikube" state is running.
I0723 12:34:08.977578 2614518 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0723 12:34:09.004359 2614518 profile.go:148] Saving config to /home/pulse02/.minikube/profiles/minikube/config.json ...
I0723 12:34:09.004555 2614518 machine.go:88] provisioning docker machine ...
I0723 12:34:09.004571 2614518 ubuntu.go:169] provisioning hostname "minikube"
I0723 12:34:09.004615 2614518 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0723 12:34:09.031636 2614518 main.go:141] libmachine: Using SSH client type: native
I0723 12:34:09.032302 2614518 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x808a40] 0x80b720 <nil>  [] 0s} 127.0.0.1 32782 <nil> <nil>}
I0723 12:34:09.032328 2614518 main.go:141] libmachine: About to run SSH command:
sudo hostname minikube && echo "minikube" | sudo tee /etc/hostname
I0723 12:34:09.033190 2614518 main.go:141] libmachine: Error dialing TCP: ssh: handshake failed: read tcp 127.0.0.1:52054->127.0.0.1:32782: read: connection reset by peer
I0723 12:34:12.196041 2614518 main.go:141] libmachine: SSH cmd err, output: <nil>: minikube

I0723 12:34:12.196134 2614518 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0723 12:34:12.215136 2614518 main.go:141] libmachine: Using SSH client type: native
I0723 12:34:12.215686 2614518 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x808a40] 0x80b720 <nil>  [] 0s} 127.0.0.1 32782 <nil> <nil>}
I0723 12:34:12.215711 2614518 main.go:141] libmachine: About to run SSH command:

		if ! grep -xq '.*\sminikube' /etc/hosts; then
			if grep -xq '127.0.1.1\s.*' /etc/hosts; then
				sudo sed -i 's/^127.0.1.1\s.*/127.0.1.1 minikube/g' /etc/hosts;
			else 
				echo '127.0.1.1 minikube' | sudo tee -a /etc/hosts; 
			fi
		fi
I0723 12:34:12.351978 2614518 main.go:141] libmachine: SSH cmd err, output: <nil>: 
I0723 12:34:12.351997 2614518 ubuntu.go:175] set auth options {CertDir:/home/pulse02/.minikube CaCertPath:/home/pulse02/.minikube/certs/ca.pem CaPrivateKeyPath:/home/pulse02/.minikube/certs/ca-key.pem CaCertRemotePath:/etc/docker/ca.pem ServerCertPath:/home/pulse02/.minikube/machines/server.pem ServerKeyPath:/home/pulse02/.minikube/machines/server-key.pem ClientKeyPath:/home/pulse02/.minikube/certs/key.pem ServerCertRemotePath:/etc/docker/server.pem ServerKeyRemotePath:/etc/docker/server-key.pem ClientCertPath:/home/pulse02/.minikube/certs/cert.pem ServerCertSANs:[] StorePath:/home/pulse02/.minikube}
I0723 12:34:12.352015 2614518 ubuntu.go:177] setting up certificates
I0723 12:34:12.352023 2614518 provision.go:83] configureAuth start
I0723 12:34:12.352087 2614518 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0723 12:34:12.369461 2614518 provision.go:138] copyHostCerts
I0723 12:34:12.369517 2614518 exec_runner.go:144] found /home/pulse02/.minikube/cert.pem, removing ...
I0723 12:34:12.369524 2614518 exec_runner.go:203] rm: /home/pulse02/.minikube/cert.pem
I0723 12:34:12.369599 2614518 exec_runner.go:151] cp: /home/pulse02/.minikube/certs/cert.pem --> /home/pulse02/.minikube/cert.pem (1123 bytes)
I0723 12:34:12.369703 2614518 exec_runner.go:144] found /home/pulse02/.minikube/key.pem, removing ...
I0723 12:34:12.369708 2614518 exec_runner.go:203] rm: /home/pulse02/.minikube/key.pem
I0723 12:34:12.369747 2614518 exec_runner.go:151] cp: /home/pulse02/.minikube/certs/key.pem --> /home/pulse02/.minikube/key.pem (1675 bytes)
I0723 12:34:12.369822 2614518 exec_runner.go:144] found /home/pulse02/.minikube/ca.pem, removing ...
I0723 12:34:12.369826 2614518 exec_runner.go:203] rm: /home/pulse02/.minikube/ca.pem
I0723 12:34:12.369861 2614518 exec_runner.go:151] cp: /home/pulse02/.minikube/certs/ca.pem --> /home/pulse02/.minikube/ca.pem (1082 bytes)
I0723 12:34:12.369923 2614518 provision.go:112] generating server cert: /home/pulse02/.minikube/machines/server.pem ca-key=/home/pulse02/.minikube/certs/ca.pem private-key=/home/pulse02/.minikube/certs/ca-key.pem org=pulse02.minikube san=[192.168.49.2 127.0.0.1 localhost 127.0.0.1 minikube minikube]
I0723 12:34:12.597585 2614518 provision.go:172] copyRemoteCerts
I0723 12:34:12.597645 2614518 ssh_runner.go:195] Run: sudo mkdir -p /etc/docker /etc/docker /etc/docker
I0723 12:34:12.597687 2614518 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0723 12:34:12.614344 2614518 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32782 SSHKeyPath:/home/pulse02/.minikube/machines/minikube/id_rsa Username:docker}
I0723 12:34:12.720143 2614518 ssh_runner.go:362] scp /home/pulse02/.minikube/machines/server-key.pem --> /etc/docker/server-key.pem (1679 bytes)
I0723 12:34:12.747844 2614518 ssh_runner.go:362] scp /home/pulse02/.minikube/certs/ca.pem --> /etc/docker/ca.pem (1082 bytes)
I0723 12:34:12.776336 2614518 ssh_runner.go:362] scp /home/pulse02/.minikube/machines/server.pem --> /etc/docker/server.pem (1204 bytes)
I0723 12:34:12.807818 2614518 provision.go:86] duration metric: configureAuth took 455.775754ms
I0723 12:34:12.807848 2614518 ubuntu.go:193] setting minikube options for container-runtime
I0723 12:34:12.808159 2614518 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.28.3
I0723 12:34:12.808226 2614518 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0723 12:34:12.826002 2614518 main.go:141] libmachine: Using SSH client type: native
I0723 12:34:12.826429 2614518 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x808a40] 0x80b720 <nil>  [] 0s} 127.0.0.1 32782 <nil> <nil>}
I0723 12:34:12.826446 2614518 main.go:141] libmachine: About to run SSH command:
df --output=fstype / | tail -n 1
I0723 12:34:12.957033 2614518 main.go:141] libmachine: SSH cmd err, output: <nil>: overlay

I0723 12:34:12.957047 2614518 ubuntu.go:71] root file system type: overlay
I0723 12:34:12.957200 2614518 provision.go:309] Updating docker unit: /lib/systemd/system/docker.service ...
I0723 12:34:12.957292 2614518 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0723 12:34:12.975487 2614518 main.go:141] libmachine: Using SSH client type: native
I0723 12:34:12.975920 2614518 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x808a40] 0x80b720 <nil>  [] 0s} 127.0.0.1 32782 <nil> <nil>}
I0723 12:34:12.976001 2614518 main.go:141] libmachine: About to run SSH command:
sudo mkdir -p /lib/systemd/system && printf %!s(MISSING) "[Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP \$MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target
" | sudo tee /lib/systemd/system/docker.service.new
I0723 12:34:13.129697 2614518 main.go:141] libmachine: SSH cmd err, output: <nil>: [Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP $MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target

I0723 12:34:13.129793 2614518 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0723 12:34:13.148048 2614518 main.go:141] libmachine: Using SSH client type: native
I0723 12:34:13.148462 2614518 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x808a40] 0x80b720 <nil>  [] 0s} 127.0.0.1 32782 <nil> <nil>}
I0723 12:34:13.148479 2614518 main.go:141] libmachine: About to run SSH command:
sudo diff -u /lib/systemd/system/docker.service /lib/systemd/system/docker.service.new || { sudo mv /lib/systemd/system/docker.service.new /lib/systemd/system/docker.service; sudo systemctl -f daemon-reload && sudo systemctl -f enable docker && sudo systemctl -f restart docker; }
I0723 12:34:13.286743 2614518 main.go:141] libmachine: SSH cmd err, output: <nil>: 
I0723 12:34:13.286768 2614518 machine.go:91] provisioned docker machine in 4.282202808s
I0723 12:34:13.286777 2614518 start.go:300] post-start starting for "minikube" (driver="docker")
I0723 12:34:13.286788 2614518 start.go:329] creating required directories: [/etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs]
I0723 12:34:13.286880 2614518 ssh_runner.go:195] Run: sudo mkdir -p /etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs
I0723 12:34:13.286930 2614518 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0723 12:34:13.304593 2614518 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32782 SSHKeyPath:/home/pulse02/.minikube/machines/minikube/id_rsa Username:docker}
I0723 12:34:13.401696 2614518 ssh_runner.go:195] Run: cat /etc/os-release
I0723 12:34:13.404815 2614518 main.go:141] libmachine: Couldn't set key VERSION_CODENAME, no corresponding struct field found
I0723 12:34:13.404838 2614518 main.go:141] libmachine: Couldn't set key PRIVACY_POLICY_URL, no corresponding struct field found
I0723 12:34:13.404851 2614518 main.go:141] libmachine: Couldn't set key UBUNTU_CODENAME, no corresponding struct field found
I0723 12:34:13.404857 2614518 info.go:137] Remote host: Ubuntu 22.04.3 LTS
I0723 12:34:13.404866 2614518 filesync.go:126] Scanning /home/pulse02/.minikube/addons for local assets ...
I0723 12:34:13.404918 2614518 filesync.go:126] Scanning /home/pulse02/.minikube/files for local assets ...
I0723 12:34:13.404943 2614518 start.go:303] post-start completed in 118.160175ms
I0723 12:34:13.404980 2614518 ssh_runner.go:195] Run: sh -c "df -h /var | awk 'NR==2{print $5}'"
I0723 12:34:13.405014 2614518 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0723 12:34:13.423572 2614518 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32782 SSHKeyPath:/home/pulse02/.minikube/machines/minikube/id_rsa Username:docker}
I0723 12:34:13.514455 2614518 ssh_runner.go:195] Run: sh -c "df -BG /var | awk 'NR==2{print $4}'"
I0723 12:34:13.520651 2614518 fix.go:56] fixHost completed within 5.249074854s
I0723 12:34:13.520665 2614518 start.go:83] releasing machines lock for "minikube", held for 5.249108414s
I0723 12:34:13.520755 2614518 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0723 12:34:13.538895 2614518 ssh_runner.go:195] Run: cat /version.json
I0723 12:34:13.538912 2614518 ssh_runner.go:195] Run: curl -sS -m 2 https://registry.k8s.io/
I0723 12:34:13.538938 2614518 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0723 12:34:13.538960 2614518 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0723 12:34:13.555797 2614518 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32782 SSHKeyPath:/home/pulse02/.minikube/machines/minikube/id_rsa Username:docker}
I0723 12:34:13.561775 2614518 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32782 SSHKeyPath:/home/pulse02/.minikube/machines/minikube/id_rsa Username:docker}
I0723 12:34:13.646852 2614518 ssh_runner.go:195] Run: systemctl --version
I0723 12:34:14.311477 2614518 ssh_runner.go:195] Run: sh -c "stat /etc/cni/net.d/*loopback.conf*"
I0723 12:34:14.317462 2614518 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f -name *loopback.conf* -not -name *.mk_disabled -exec sh -c "grep -q loopback {} && ( grep -q name {} || sudo sed -i '/"type": "loopback"/i \ \ \ \ "name": "loopback",' {} ) && sudo sed -i 's|"cniVersion": ".*"|"cniVersion": "1.0.0"|g' {}" ;
I0723 12:34:14.338930 2614518 cni.go:230] loopback cni configuration patched: "/etc/cni/net.d/*loopback.conf*" found
I0723 12:34:14.339023 2614518 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f ( ( -name *bridge* -or -name *podman* ) -and -not -name *.mk_disabled ) -printf "%!p(MISSING), " -exec sh -c "sudo mv {} {}.mk_disabled" ;
I0723 12:34:14.349567 2614518 cni.go:259] no active bridge cni configs found in "/etc/cni/net.d" - nothing to disable
I0723 12:34:14.349588 2614518 start.go:472] detecting cgroup driver to use...
I0723 12:34:14.349630 2614518 detect.go:196] detected "cgroupfs" cgroup driver on host os
I0723 12:34:14.349776 2614518 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %!s(MISSING) "runtime-endpoint: unix:///run/containerd/containerd.sock
" | sudo tee /etc/crictl.yaml"
I0723 12:34:14.369082 2614518 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)sandbox_image = .*$|\1sandbox_image = "registry.k8s.io/pause:3.9"|' /etc/containerd/config.toml"
I0723 12:34:14.380124 2614518 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)restrict_oom_score_adj = .*$|\1restrict_oom_score_adj = false|' /etc/containerd/config.toml"
I0723 12:34:14.393436 2614518 containerd.go:145] configuring containerd to use "cgroupfs" as cgroup driver...
I0723 12:34:14.393507 2614518 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)SystemdCgroup = .*$|\1SystemdCgroup = false|g' /etc/containerd/config.toml"
I0723 12:34:14.404353 2614518 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runtime.v1.linux"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0723 12:34:14.420425 2614518 ssh_runner.go:195] Run: sh -c "sudo sed -i '/systemd_cgroup/d' /etc/containerd/config.toml"
I0723 12:34:14.438603 2614518 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runc.v1"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0723 12:34:14.452923 2614518 ssh_runner.go:195] Run: sh -c "sudo rm -rf /etc/cni/net.mk"
I0723 12:34:14.464283 2614518 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)conf_dir = .*$|\1conf_dir = "/etc/cni/net.d"|g' /etc/containerd/config.toml"
I0723 12:34:14.479186 2614518 ssh_runner.go:195] Run: sudo sysctl net.bridge.bridge-nf-call-iptables
I0723 12:34:14.488261 2614518 ssh_runner.go:195] Run: sudo sh -c "echo 1 > /proc/sys/net/ipv4/ip_forward"
I0723 12:34:14.497173 2614518 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0723 12:34:14.599569 2614518 ssh_runner.go:195] Run: sudo systemctl restart containerd
I0723 12:34:14.711375 2614518 start.go:472] detecting cgroup driver to use...
I0723 12:34:14.711403 2614518 detect.go:196] detected "cgroupfs" cgroup driver on host os
I0723 12:34:14.711453 2614518 ssh_runner.go:195] Run: sudo systemctl cat docker.service
I0723 12:34:14.728643 2614518 cruntime.go:279] skipping containerd shutdown because we are bound to it
I0723 12:34:14.728704 2614518 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service crio
I0723 12:34:14.747575 2614518 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %!s(MISSING) "runtime-endpoint: unix:///var/run/cri-dockerd.sock
" | sudo tee /etc/crictl.yaml"
I0723 12:34:14.769826 2614518 ssh_runner.go:195] Run: which cri-dockerd
I0723 12:34:14.773879 2614518 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/cri-docker.service.d
I0723 12:34:14.785240 2614518 ssh_runner.go:362] scp memory --> /etc/systemd/system/cri-docker.service.d/10-cni.conf (189 bytes)
I0723 12:34:14.806307 2614518 ssh_runner.go:195] Run: sudo systemctl unmask docker.service
I0723 12:34:14.918381 2614518 ssh_runner.go:195] Run: sudo systemctl enable docker.socket
I0723 12:34:15.052644 2614518 docker.go:560] configuring docker to use "cgroupfs" as cgroup driver...
I0723 12:34:15.052932 2614518 ssh_runner.go:362] scp memory --> /etc/docker/daemon.json (130 bytes)
I0723 12:34:15.077506 2614518 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0723 12:34:15.175912 2614518 ssh_runner.go:195] Run: sudo systemctl restart docker
I0723 12:34:16.549478 2614518 ssh_runner.go:235] Completed: sudo systemctl restart docker: (1.37353013s)
I0723 12:34:16.549543 2614518 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket
I0723 12:34:16.661264 2614518 ssh_runner.go:195] Run: sudo systemctl unmask cri-docker.socket
I0723 12:34:16.765808 2614518 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket
I0723 12:34:16.871152 2614518 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0723 12:34:16.960814 2614518 ssh_runner.go:195] Run: sudo systemctl restart cri-docker.socket
I0723 12:34:16.980316 2614518 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0723 12:34:17.074660 2614518 ssh_runner.go:195] Run: sudo systemctl restart cri-docker
I0723 12:34:17.174718 2614518 start.go:519] Will wait 60s for socket path /var/run/cri-dockerd.sock
I0723 12:34:17.174796 2614518 ssh_runner.go:195] Run: stat /var/run/cri-dockerd.sock
I0723 12:34:17.179292 2614518 start.go:540] Will wait 60s for crictl version
I0723 12:34:17.179372 2614518 ssh_runner.go:195] Run: which crictl
I0723 12:34:17.183789 2614518 ssh_runner.go:195] Run: sudo /usr/bin/crictl version
I0723 12:34:17.236527 2614518 start.go:556] Version:  0.1.0
RuntimeName:  docker
RuntimeVersion:  24.0.7
RuntimeApiVersion:  v1
I0723 12:34:17.236611 2614518 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0723 12:34:17.263670 2614518 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0723 12:34:17.302276 2614518 out.go:204] 🐳  Preparing Kubernetes v1.28.3 on Docker 24.0.7 ...
I0723 12:34:17.302394 2614518 cli_runner.go:164] Run: docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
I0723 12:34:17.317585 2614518 ssh_runner.go:195] Run: grep 192.168.49.1	host.minikube.internal$ /etc/hosts
I0723 12:34:17.321126 2614518 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\thost.minikube.internal$' "/etc/hosts"; echo "192.168.49.1	host.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I0723 12:34:17.334444 2614518 preload.go:132] Checking if preload exists for k8s version v1.28.3 and runtime docker
I0723 12:34:17.334500 2614518 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0723 12:34:17.361539 2614518 docker.go:671] Got preloaded images: -- stdout --
tushargayakwad/python-backend:latest
tushargayakwad/node:latest
tushargayakwad/java-images:latest
tushargayakwad/java-images:<none>
nginx:latest
newrelic/nri-kube-events:2.9.9
newrelic/k8s-metadata-injection:1.27.3
newrelic/newrelic-prometheus-configurator:1.16.3
newrelic/nri-kubernetes:3.28.8
newrelic/newrelic-fluentbit-output:2.0.0
newrelic/infrastructure-bundle:3.2.43
newrelic/k8s-events-forwarder:1.52.3
back-image:latest
mukesh18s/backend:latest
front-image:latest
mukesh18s/frontend:latest
mysql:5.7
registry.k8s.io/ingress-nginx/controller:<none>
registry.k8s.io/kube-apiserver:v1.28.3
registry.k8s.io/kube-controller-manager:v1.28.3
registry.k8s.io/kube-scheduler:v1.28.3
registry.k8s.io/kube-proxy:v1.28.3
registry.k8s.io/ingress-nginx/kube-webhook-certgen:<none>
registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.10.0
registry.k8s.io/metrics-server/metrics-server:<none>
registry.k8s.io/etcd:3.5.9-0
quay.io/prometheus/prometheus:v2.37.8
registry.k8s.io/coredns/coredns:v1.10.1
registry.k8s.io/pause:3.9
kubernetesui/dashboard:<none>
registry.k8s.io/ingress-nginx/kube-webhook-certgen:v1.3.0
kubernetesui/metrics-scraper:<none>
gcr.io/k8s-minikube/storage-provisioner:v5
gcr.io/google-samples/kubernetes-bootcamp:v1

-- /stdout --
I0723 12:34:17.361554 2614518 docker.go:601] Images already preloaded, skipping extraction
I0723 12:34:17.361601 2614518 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0723 12:34:17.389647 2614518 docker.go:671] Got preloaded images: -- stdout --
tushargayakwad/python-backend:latest
tushargayakwad/node:latest
tushargayakwad/java-images:latest
tushargayakwad/java-images:<none>
nginx:latest
newrelic/nri-kube-events:2.9.9
newrelic/k8s-metadata-injection:1.27.3
newrelic/newrelic-prometheus-configurator:1.16.3
newrelic/nri-kubernetes:3.28.8
newrelic/newrelic-fluentbit-output:2.0.0
newrelic/infrastructure-bundle:3.2.43
newrelic/k8s-events-forwarder:1.52.3
back-image:latest
mukesh18s/backend:latest
front-image:latest
mukesh18s/frontend:latest
mysql:5.7
registry.k8s.io/ingress-nginx/controller:<none>
registry.k8s.io/kube-apiserver:v1.28.3
registry.k8s.io/kube-scheduler:v1.28.3
registry.k8s.io/kube-controller-manager:v1.28.3
registry.k8s.io/kube-proxy:v1.28.3
registry.k8s.io/ingress-nginx/kube-webhook-certgen:<none>
registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.10.0
registry.k8s.io/metrics-server/metrics-server:<none>
registry.k8s.io/etcd:3.5.9-0
quay.io/prometheus/prometheus:v2.37.8
registry.k8s.io/coredns/coredns:v1.10.1
registry.k8s.io/pause:3.9
kubernetesui/dashboard:<none>
registry.k8s.io/ingress-nginx/kube-webhook-certgen:v1.3.0
kubernetesui/metrics-scraper:<none>
gcr.io/k8s-minikube/storage-provisioner:v5
gcr.io/google-samples/kubernetes-bootcamp:v1

-- /stdout --
I0723 12:34:17.389663 2614518 cache_images.go:84] Images are preloaded, skipping loading
I0723 12:34:17.389726 2614518 ssh_runner.go:195] Run: docker info --format {{.CgroupDriver}}
I0723 12:34:17.456887 2614518 cni.go:84] Creating CNI manager for ""
I0723 12:34:17.456904 2614518 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0723 12:34:17.456921 2614518 kubeadm.go:87] Using pod CIDR: 10.244.0.0/16
I0723 12:34:17.456944 2614518 kubeadm.go:176] kubeadm options: {CertDir:/var/lib/minikube/certs ServiceCIDR:10.96.0.0/12 PodSubnet:10.244.0.0/16 AdvertiseAddress:192.168.49.2 APIServerPort:8443 KubernetesVersion:v1.28.3 EtcdDataDir:/var/lib/minikube/etcd EtcdExtraArgs:map[] ClusterName:minikube NodeName:minikube DNSDomain:cluster.local CRISocket:/var/run/cri-dockerd.sock ImageRepository: ComponentOptions:[{Component:apiServer ExtraArgs:map[enable-admission-plugins:NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota] Pairs:map[certSANs:["127.0.0.1", "localhost", "192.168.49.2"]]} {Component:controllerManager ExtraArgs:map[allocate-node-cidrs:true leader-elect:false] Pairs:map[]} {Component:scheduler ExtraArgs:map[leader-elect:false] Pairs:map[]}] FeatureArgs:map[] NodeIP:192.168.49.2 CgroupDriver:cgroupfs ClientCAFile:/var/lib/minikube/certs/ca.crt StaticPodPath:/etc/kubernetes/manifests ControlPlaneAddress:control-plane.minikube.internal KubeProxyOptions:map[] ResolvConfSearchRegression:false KubeletConfigOpts:map[hairpinMode:hairpin-veth runtimeRequestTimeout:15m] PrependCriSocketUnix:true}
I0723 12:34:17.457097 2614518 kubeadm.go:181] kubeadm config:
apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: 192.168.49.2
  bindPort: 8443
bootstrapTokens:
  - groups:
      - system:bootstrappers:kubeadm:default-node-token
    ttl: 24h0m0s
    usages:
      - signing
      - authentication
nodeRegistration:
  criSocket: unix:///var/run/cri-dockerd.sock
  name: "minikube"
  kubeletExtraArgs:
    node-ip: 192.168.49.2
  taints: []
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
apiServer:
  certSANs: ["127.0.0.1", "localhost", "192.168.49.2"]
  extraArgs:
    enable-admission-plugins: "NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota"
controllerManager:
  extraArgs:
    allocate-node-cidrs: "true"
    leader-elect: "false"
scheduler:
  extraArgs:
    leader-elect: "false"
certificatesDir: /var/lib/minikube/certs
clusterName: mk
controlPlaneEndpoint: control-plane.minikube.internal:8443
etcd:
  local:
    dataDir: /var/lib/minikube/etcd
    extraArgs:
      proxy-refresh-interval: "70000"
kubernetesVersion: v1.28.3
networking:
  dnsDomain: cluster.local
  podSubnet: "10.244.0.0/16"
  serviceSubnet: 10.96.0.0/12
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
authentication:
  x509:
    clientCAFile: /var/lib/minikube/certs/ca.crt
cgroupDriver: cgroupfs
hairpinMode: hairpin-veth
runtimeRequestTimeout: 15m
clusterDomain: "cluster.local"
# disable disk resource management by default
imageGCHighThresholdPercent: 100
evictionHard:
  nodefs.available: "0%!"(MISSING)
  nodefs.inodesFree: "0%!"(MISSING)
  imagefs.available: "0%!"(MISSING)
failSwapOn: false
staticPodPath: /etc/kubernetes/manifests
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
clusterCIDR: "10.244.0.0/16"
metricsBindAddress: 0.0.0.0:10249
conntrack:
  maxPerCore: 0
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_established"
  tcpEstablishedTimeout: 0s
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_close"
  tcpCloseWaitTimeout: 0s

I0723 12:34:17.457178 2614518 kubeadm.go:976] kubelet [Unit]
Wants=docker.socket

[Service]
ExecStart=
ExecStart=/var/lib/minikube/binaries/v1.28.3/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --config=/var/lib/kubelet/config.yaml --container-runtime-endpoint=unix:///var/run/cri-dockerd.sock --hostname-override=minikube --kubeconfig=/etc/kubernetes/kubelet.conf --node-ip=192.168.49.2

[Install]
 config:
{KubernetesVersion:v1.28.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:}
I0723 12:34:17.457238 2614518 ssh_runner.go:195] Run: sudo ls /var/lib/minikube/binaries/v1.28.3
I0723 12:34:17.469383 2614518 binaries.go:44] Found k8s binaries, skipping transfer
I0723 12:34:17.469438 2614518 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/kubelet.service.d /lib/systemd/system /var/tmp/minikube
I0723 12:34:17.478736 2614518 ssh_runner.go:362] scp memory --> /etc/systemd/system/kubelet.service.d/10-kubeadm.conf (369 bytes)
I0723 12:34:17.499920 2614518 ssh_runner.go:362] scp memory --> /lib/systemd/system/kubelet.service (352 bytes)
I0723 12:34:17.522327 2614518 ssh_runner.go:362] scp memory --> /var/tmp/minikube/kubeadm.yaml.new (2091 bytes)
I0723 12:34:17.546308 2614518 ssh_runner.go:195] Run: grep 192.168.49.2	control-plane.minikube.internal$ /etc/hosts
I0723 12:34:17.550092 2614518 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\tcontrol-plane.minikube.internal$' "/etc/hosts"; echo "192.168.49.2	control-plane.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I0723 12:34:17.563132 2614518 certs.go:56] Setting up /home/pulse02/.minikube/profiles/minikube for IP: 192.168.49.2
I0723 12:34:17.563161 2614518 certs.go:190] acquiring lock for shared ca certs: {Name:mk122eb7715650fc909f02653e0058c939942cd0 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0723 12:34:17.563297 2614518 certs.go:199] skipping minikubeCA CA generation: /home/pulse02/.minikube/ca.key
I0723 12:34:17.563366 2614518 certs.go:199] skipping proxyClientCA CA generation: /home/pulse02/.minikube/proxy-client-ca.key
I0723 12:34:17.563447 2614518 certs.go:315] skipping minikube-user signed cert generation: /home/pulse02/.minikube/profiles/minikube/client.key
I0723 12:34:17.563496 2614518 certs.go:315] skipping minikube signed cert generation: /home/pulse02/.minikube/profiles/minikube/apiserver.key.dd3b5fb2
I0723 12:34:17.563552 2614518 certs.go:315] skipping aggregator signed cert generation: /home/pulse02/.minikube/profiles/minikube/proxy-client.key
I0723 12:34:17.563672 2614518 certs.go:437] found cert: /home/pulse02/.minikube/certs/home/pulse02/.minikube/certs/ca-key.pem (1679 bytes)
I0723 12:34:17.563702 2614518 certs.go:437] found cert: /home/pulse02/.minikube/certs/home/pulse02/.minikube/certs/ca.pem (1082 bytes)
I0723 12:34:17.563733 2614518 certs.go:437] found cert: /home/pulse02/.minikube/certs/home/pulse02/.minikube/certs/cert.pem (1123 bytes)
I0723 12:34:17.563756 2614518 certs.go:437] found cert: /home/pulse02/.minikube/certs/home/pulse02/.minikube/certs/key.pem (1675 bytes)
I0723 12:34:17.564480 2614518 ssh_runner.go:362] scp /home/pulse02/.minikube/profiles/minikube/apiserver.crt --> /var/lib/minikube/certs/apiserver.crt (1399 bytes)
I0723 12:34:17.594938 2614518 ssh_runner.go:362] scp /home/pulse02/.minikube/profiles/minikube/apiserver.key --> /var/lib/minikube/certs/apiserver.key (1679 bytes)
I0723 12:34:17.624077 2614518 ssh_runner.go:362] scp /home/pulse02/.minikube/profiles/minikube/proxy-client.crt --> /var/lib/minikube/certs/proxy-client.crt (1147 bytes)
I0723 12:34:17.658480 2614518 ssh_runner.go:362] scp /home/pulse02/.minikube/profiles/minikube/proxy-client.key --> /var/lib/minikube/certs/proxy-client.key (1679 bytes)
I0723 12:34:17.686129 2614518 ssh_runner.go:362] scp /home/pulse02/.minikube/ca.crt --> /var/lib/minikube/certs/ca.crt (1111 bytes)
I0723 12:34:17.717495 2614518 ssh_runner.go:362] scp /home/pulse02/.minikube/ca.key --> /var/lib/minikube/certs/ca.key (1675 bytes)
I0723 12:34:17.746927 2614518 ssh_runner.go:362] scp /home/pulse02/.minikube/proxy-client-ca.crt --> /var/lib/minikube/certs/proxy-client-ca.crt (1119 bytes)
I0723 12:34:17.774951 2614518 ssh_runner.go:362] scp /home/pulse02/.minikube/proxy-client-ca.key --> /var/lib/minikube/certs/proxy-client-ca.key (1675 bytes)
I0723 12:34:17.804566 2614518 ssh_runner.go:362] scp /home/pulse02/.minikube/ca.crt --> /usr/share/ca-certificates/minikubeCA.pem (1111 bytes)
I0723 12:34:17.834886 2614518 ssh_runner.go:362] scp memory --> /var/lib/minikube/kubeconfig (738 bytes)
I0723 12:34:17.856184 2614518 ssh_runner.go:195] Run: openssl version
I0723 12:34:17.863134 2614518 ssh_runner.go:195] Run: sudo /bin/bash -c "test -s /usr/share/ca-certificates/minikubeCA.pem && ln -fs /usr/share/ca-certificates/minikubeCA.pem /etc/ssl/certs/minikubeCA.pem"
I0723 12:34:17.874555 2614518 ssh_runner.go:195] Run: ls -la /usr/share/ca-certificates/minikubeCA.pem
I0723 12:34:17.878411 2614518 certs.go:480] hashing: -rw-r--r-- 1 root root 1111 Apr 18 06:03 /usr/share/ca-certificates/minikubeCA.pem
I0723 12:34:17.878465 2614518 ssh_runner.go:195] Run: openssl x509 -hash -noout -in /usr/share/ca-certificates/minikubeCA.pem
I0723 12:34:17.887994 2614518 ssh_runner.go:195] Run: sudo /bin/bash -c "test -L /etc/ssl/certs/b5213941.0 || ln -fs /etc/ssl/certs/minikubeCA.pem /etc/ssl/certs/b5213941.0"
I0723 12:34:17.898229 2614518 ssh_runner.go:195] Run: ls /var/lib/minikube/certs/etcd
I0723 12:34:17.901848 2614518 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/apiserver-etcd-client.crt -checkend 86400
I0723 12:34:17.910428 2614518 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/apiserver-kubelet-client.crt -checkend 86400
I0723 12:34:17.920357 2614518 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/etcd/server.crt -checkend 86400
I0723 12:34:17.927625 2614518 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/etcd/healthcheck-client.crt -checkend 86400
I0723 12:34:17.935107 2614518 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/etcd/peer.crt -checkend 86400
I0723 12:34:17.942448 2614518 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/front-proxy-client.crt -checkend 86400
I0723 12:34:17.950876 2614518 kubeadm.go:404] StartCluster: {Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.28.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.28.3 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[dashboard:true default-storageclass:true ingress:true metrics-server:true storage-provisioner:true] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/pulse02:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 AutoPauseInterval:1m0s GPUs:}
I0723 12:34:17.950996 2614518 ssh_runner.go:195] Run: docker ps --filter status=paused --filter=name=k8s_.*_(kube-system)_ --format={{.ID}}
I0723 12:34:17.969835 2614518 ssh_runner.go:195] Run: sudo ls /var/lib/kubelet/kubeadm-flags.env /var/lib/kubelet/config.yaml /var/lib/minikube/etcd
I0723 12:34:17.980358 2614518 kubeadm.go:419] found existing configuration files, will attempt cluster restart
I0723 12:34:17.987215 2614518 kubeadm.go:636] restartCluster start
I0723 12:34:17.987278 2614518 ssh_runner.go:195] Run: sudo test -d /data/minikube
I0723 12:34:17.997323 2614518 kubeadm.go:127] /data/minikube skipping compat symlinks: sudo test -d /data/minikube: Process exited with status 1
stdout:

stderr:
I0723 12:34:17.997396 2614518 kubeconfig.go:135] verify returned: extract IP: "minikube" does not appear in /etc/kubernetes/admin.conf
I0723 12:34:17.997411 2614518 kubeconfig.go:146] "minikube" context is missing from /etc/kubernetes/admin.conf - will repair!
W0723 12:34:17.997829 2614518 kubeadm.go:672] unable to update kubeconfig (cluster will likely require a reset): write: Error creating directory: /etc/kubernetes: mkdir /etc/kubernetes: permission denied
I0723 12:34:17.997895 2614518 kubeadm.go:640] restartCluster took 10.671637ms
W0723 12:34:17.997950 2614518 out.go:239] 🤦  Unable to restart cluster, will reset it: getting k8s client: client config: client config: context "minikube" does not exist
I0723 12:34:17.998015 2614518 ssh_runner.go:195] Run: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.28.3:$PATH" kubeadm reset --cri-socket /var/run/cri-dockerd.sock --force"
I0723 12:34:23.879320 2614518 ssh_runner.go:235] Completed: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.28.3:$PATH" kubeadm reset --cri-socket /var/run/cri-dockerd.sock --force": (5.881273702s)
I0723 12:34:23.879389 2614518 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service kubelet
I0723 12:34:23.893157 2614518 ssh_runner.go:195] Run: sudo cp /var/tmp/minikube/kubeadm.yaml.new /var/tmp/minikube/kubeadm.yaml
I0723 12:34:23.904343 2614518 kubeadm.go:226] ignoring SystemVerification for kubeadm because of docker driver
I0723 12:34:23.904403 2614518 ssh_runner.go:195] Run: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf
I0723 12:34:23.914440 2614518 kubeadm.go:152] config check failed, skipping stale config cleanup: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
ls: cannot access '/etc/kubernetes/admin.conf': No such file or directory
ls: cannot access '/etc/kubernetes/kubelet.conf': No such file or directory
ls: cannot access '/etc/kubernetes/controller-manager.conf': No such file or directory
ls: cannot access '/etc/kubernetes/scheduler.conf': No such file or directory
I0723 12:34:23.914484 2614518 ssh_runner.go:286] Start: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.28.3:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables"
I0723 12:34:23.960279 2614518 kubeadm.go:322] [init] Using Kubernetes version: v1.28.3
I0723 12:34:23.960544 2614518 kubeadm.go:322] [preflight] Running pre-flight checks
I0723 12:34:24.014473 2614518 kubeadm.go:322] [preflight] The system verification failed. Printing the output from the verification:
I0723 12:34:24.014577 2614518 kubeadm.go:322] [0;37mKERNEL_VERSION[0m: [0;32m5.15.0-113-generic[0m
I0723 12:34:24.014620 2614518 kubeadm.go:322] [0;37mOS[0m: [0;32mLinux[0m
I0723 12:34:24.014694 2614518 kubeadm.go:322] [0;37mCGROUPS_CPU[0m: [0;32menabled[0m
I0723 12:34:24.014776 2614518 kubeadm.go:322] [0;37mCGROUPS_CPUACCT[0m: [0;32menabled[0m
I0723 12:34:24.014838 2614518 kubeadm.go:322] [0;37mCGROUPS_CPUSET[0m: [0;32menabled[0m
I0723 12:34:24.014896 2614518 kubeadm.go:322] [0;37mCGROUPS_DEVICES[0m: [0;32menabled[0m
I0723 12:34:24.014957 2614518 kubeadm.go:322] [0;37mCGROUPS_FREEZER[0m: [0;32menabled[0m
I0723 12:34:24.015028 2614518 kubeadm.go:322] [0;37mCGROUPS_MEMORY[0m: [0;32menabled[0m
I0723 12:34:24.015090 2614518 kubeadm.go:322] [0;37mCGROUPS_PIDS[0m: [0;32menabled[0m
I0723 12:34:24.015154 2614518 kubeadm.go:322] [0;37mCGROUPS_HUGETLB[0m: [0;32menabled[0m
I0723 12:34:24.015214 2614518 kubeadm.go:322] [0;37mCGROUPS_BLKIO[0m: [0;32menabled[0m
I0723 12:34:24.098575 2614518 kubeadm.go:322] [preflight] Pulling images required for setting up a Kubernetes cluster
I0723 12:34:24.098706 2614518 kubeadm.go:322] [preflight] This might take a minute or two, depending on the speed of your internet connection
I0723 12:34:24.098833 2614518 kubeadm.go:322] [preflight] You can also perform this action in beforehand using 'kubeadm config images pull'
I0723 12:34:24.464885 2614518 kubeadm.go:322] [certs] Using certificateDir folder "/var/lib/minikube/certs"
I0723 12:34:24.473148 2614518 out.go:204]     ▪ Generating certificates and keys ...
I0723 12:34:24.473315 2614518 kubeadm.go:322] [certs] Using existing ca certificate authority
I0723 12:34:24.473416 2614518 kubeadm.go:322] [certs] Using existing apiserver certificate and key on disk
I0723 12:34:24.473515 2614518 kubeadm.go:322] [certs] Using existing apiserver-kubelet-client certificate and key on disk
I0723 12:34:24.473584 2614518 kubeadm.go:322] [certs] Using existing front-proxy-ca certificate authority
I0723 12:34:24.473657 2614518 kubeadm.go:322] [certs] Using existing front-proxy-client certificate and key on disk
I0723 12:34:24.473737 2614518 kubeadm.go:322] [certs] Using existing etcd/ca certificate authority
I0723 12:34:24.473809 2614518 kubeadm.go:322] [certs] Using existing etcd/server certificate and key on disk
I0723 12:34:24.473893 2614518 kubeadm.go:322] [certs] Using existing etcd/peer certificate and key on disk
I0723 12:34:24.474061 2614518 kubeadm.go:322] [certs] Using existing etcd/healthcheck-client certificate and key on disk
I0723 12:34:24.474204 2614518 kubeadm.go:322] [certs] Using existing apiserver-etcd-client certificate and key on disk
I0723 12:34:24.474268 2614518 kubeadm.go:322] [certs] Using the existing "sa" key
I0723 12:34:24.474362 2614518 kubeadm.go:322] [kubeconfig] Using kubeconfig folder "/etc/kubernetes"
I0723 12:34:24.837435 2614518 kubeadm.go:322] [kubeconfig] Writing "admin.conf" kubeconfig file
I0723 12:34:25.172417 2614518 kubeadm.go:322] [kubeconfig] Writing "kubelet.conf" kubeconfig file
I0723 12:34:25.308685 2614518 kubeadm.go:322] [kubeconfig] Writing "controller-manager.conf" kubeconfig file
I0723 12:34:25.531960 2614518 kubeadm.go:322] [kubeconfig] Writing "scheduler.conf" kubeconfig file
I0723 12:34:25.532631 2614518 kubeadm.go:322] [etcd] Creating static Pod manifest for local etcd in "/etc/kubernetes/manifests"
I0723 12:34:25.536720 2614518 kubeadm.go:322] [control-plane] Using manifest folder "/etc/kubernetes/manifests"
I0723 12:34:25.546537 2614518 out.go:204]     ▪ Booting up control plane ...
I0723 12:34:25.546793 2614518 kubeadm.go:322] [control-plane] Creating static Pod manifest for "kube-apiserver"
I0723 12:34:25.546927 2614518 kubeadm.go:322] [control-plane] Creating static Pod manifest for "kube-controller-manager"
I0723 12:34:25.547013 2614518 kubeadm.go:322] [control-plane] Creating static Pod manifest for "kube-scheduler"
I0723 12:34:25.552464 2614518 kubeadm.go:322] [kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"
I0723 12:34:25.553864 2614518 kubeadm.go:322] [kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
I0723 12:34:25.554146 2614518 kubeadm.go:322] [kubelet-start] Starting the kubelet
I0723 12:34:25.687694 2614518 kubeadm.go:322] [wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory "/etc/kubernetes/manifests". This can take up to 4m0s
I0723 12:34:33.691853 2614518 kubeadm.go:322] [apiclient] All control plane components are healthy after 8.004236 seconds
I0723 12:34:33.692059 2614518 kubeadm.go:322] [upload-config] Storing the configuration used in ConfigMap "kubeadm-config" in the "kube-system" Namespace
I0723 12:34:33.715191 2614518 kubeadm.go:322] [kubelet] Creating a ConfigMap "kubelet-config" in namespace kube-system with the configuration for the kubelets in the cluster
I0723 12:34:34.285644 2614518 kubeadm.go:322] [upload-certs] Skipping phase. Please see --upload-certs
I0723 12:34:34.285891 2614518 kubeadm.go:322] [mark-control-plane] Marking the node minikube as control-plane by adding the labels: [node-role.kubernetes.io/control-plane node.kubernetes.io/exclude-from-external-load-balancers]
I0723 12:34:34.809138 2614518 kubeadm.go:322] [bootstrap-token] Using token: qjtlsr.833x1qytvegef6ga
I0723 12:34:34.816448 2614518 out.go:204]     ▪ Configuring RBAC rules ...
I0723 12:34:34.816607 2614518 kubeadm.go:322] [bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles
I0723 12:34:34.820330 2614518 kubeadm.go:322] [bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to get nodes
I0723 12:34:34.852997 2614518 kubeadm.go:322] [bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials
I0723 12:34:34.862101 2614518 kubeadm.go:322] [bootstrap-token] Configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token
I0723 12:34:34.872562 2614518 kubeadm.go:322] [bootstrap-token] Configured RBAC rules to allow certificate rotation for all node client certificates in the cluster
I0723 12:34:34.879512 2614518 kubeadm.go:322] [bootstrap-token] Creating the "cluster-info" ConfigMap in the "kube-public" namespace
I0723 12:34:34.913531 2614518 kubeadm.go:322] [kubelet-finalize] Updating "/etc/kubernetes/kubelet.conf" to point to a rotatable kubelet client certificate and key
I0723 12:34:35.193159 2614518 kubeadm.go:322] [addons] Applied essential addon: CoreDNS
I0723 12:34:35.301742 2614518 kubeadm.go:322] [addons] Applied essential addon: kube-proxy
I0723 12:34:35.301757 2614518 kubeadm.go:322] 
I0723 12:34:35.301879 2614518 kubeadm.go:322] Your Kubernetes control-plane has initialized successfully!
I0723 12:34:35.301893 2614518 kubeadm.go:322] 
I0723 12:34:35.302027 2614518 kubeadm.go:322] To start using your cluster, you need to run the following as a regular user:
I0723 12:34:35.302037 2614518 kubeadm.go:322] 
I0723 12:34:35.302080 2614518 kubeadm.go:322]   mkdir -p $HOME/.kube
I0723 12:34:35.302182 2614518 kubeadm.go:322]   sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
I0723 12:34:35.302299 2614518 kubeadm.go:322]   sudo chown $(id -u):$(id -g) $HOME/.kube/config
I0723 12:34:35.302308 2614518 kubeadm.go:322] 
I0723 12:34:35.302393 2614518 kubeadm.go:322] Alternatively, if you are the root user, you can run:
I0723 12:34:35.302401 2614518 kubeadm.go:322] 
I0723 12:34:35.302476 2614518 kubeadm.go:322]   export KUBECONFIG=/etc/kubernetes/admin.conf
I0723 12:34:35.302482 2614518 kubeadm.go:322] 
I0723 12:34:35.302561 2614518 kubeadm.go:322] You should now deploy a pod network to the cluster.
I0723 12:34:35.302670 2614518 kubeadm.go:322] Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
I0723 12:34:35.302782 2614518 kubeadm.go:322]   https://kubernetes.io/docs/concepts/cluster-administration/addons/
I0723 12:34:35.302800 2614518 kubeadm.go:322] 
I0723 12:34:35.302933 2614518 kubeadm.go:322] You can now join any number of control-plane nodes by copying certificate authorities
I0723 12:34:35.303083 2614518 kubeadm.go:322] and service account keys on each node and then running the following as root:
I0723 12:34:35.303095 2614518 kubeadm.go:322] 
I0723 12:34:35.303223 2614518 kubeadm.go:322]   kubeadm join control-plane.minikube.internal:8443 --token qjtlsr.833x1qytvegef6ga \
I0723 12:34:35.303391 2614518 kubeadm.go:322] 	--discovery-token-ca-cert-hash sha256:16d3deaa417439d1e6972d37d748590bafe1c6cbfa4357e0d096f95c4dd803f7 \
I0723 12:34:35.303423 2614518 kubeadm.go:322] 	--control-plane 
I0723 12:34:35.303429 2614518 kubeadm.go:322] 
I0723 12:34:35.303557 2614518 kubeadm.go:322] Then you can join any number of worker nodes by running the following on each as root:
I0723 12:34:35.303564 2614518 kubeadm.go:322] 
I0723 12:34:35.303683 2614518 kubeadm.go:322] kubeadm join control-plane.minikube.internal:8443 --token qjtlsr.833x1qytvegef6ga \
I0723 12:34:35.303850 2614518 kubeadm.go:322] 	--discovery-token-ca-cert-hash sha256:16d3deaa417439d1e6972d37d748590bafe1c6cbfa4357e0d096f95c4dd803f7 
I0723 12:34:35.361779 2614518 kubeadm.go:322] 	[WARNING Swap]: swap is enabled; production deployments should disable swap unless testing the NodeSwap feature gate of the kubelet
I0723 12:34:35.362116 2614518 kubeadm.go:322] 	[WARNING SystemVerification]: failed to parse kernel config: unable to load kernel module: "configs", output: "modprobe: FATAL: Module configs not found in directory /lib/modules/5.15.0-113-generic\n", err: exit status 1
I0723 12:34:35.362274 2614518 kubeadm.go:322] 	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
I0723 12:34:35.362301 2614518 cni.go:84] Creating CNI manager for ""
I0723 12:34:35.362329 2614518 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0723 12:34:35.369730 2614518 out.go:177] 🔗  Configuring bridge CNI (Container Networking Interface) ...
I0723 12:34:35.391292 2614518 ssh_runner.go:195] Run: sudo mkdir -p /etc/cni/net.d
I0723 12:34:35.410544 2614518 ssh_runner.go:362] scp memory --> /etc/cni/net.d/1-k8s.conflist (457 bytes)
I0723 12:34:35.489075 2614518 ssh_runner.go:195] Run: /bin/bash -c "cat /proc/$(pgrep kube-apiserver)/oom_adj"
I0723 12:34:35.489171 2614518 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.28.3/kubectl create clusterrolebinding minikube-rbac --clusterrole=cluster-admin --serviceaccount=kube-system:default --kubeconfig=/var/lib/minikube/kubeconfig
I0723 12:34:35.489227 2614518 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.28.3/kubectl label nodes minikube.k8s.io/version=v1.32.0 minikube.k8s.io/commit=8220a6eb95f0a4d75f7f2d7b14cef975f050512d minikube.k8s.io/name=minikube minikube.k8s.io/updated_at=2024_07_23T12_34_35_0700 minikube.k8s.io/primary=true --all --overwrite --kubeconfig=/var/lib/minikube/kubeconfig
I0723 12:34:35.861643 2614518 ops.go:34] apiserver oom_adj: -16
I0723 12:34:35.861677 2614518 kubeadm.go:1081] duration metric: took 372.546936ms to wait for elevateKubeSystemPrivileges.
I0723 12:34:35.861693 2614518 kubeadm.go:406] StartCluster complete in 17.910822774s
I0723 12:34:35.861716 2614518 settings.go:142] acquiring lock: {Name:mkd828db7b7cf864e2d4d124744c6ee9c2490d8b Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0723 12:34:35.861782 2614518 settings.go:150] Updating kubeconfig:  /etc/kubernetes/admin.conf
I0723 12:34:35.870692 2614518 out.go:177] 
W0723 12:34:35.881596 2614518 out.go:239] ❌  Exiting due to GUEST_START: failed to start node: Failed kubeconfig update: writing kubeconfig: Error creating directory: /etc/kubernetes: mkdir /etc/kubernetes: permission denied
W0723 12:34:35.881617 2614518 out.go:239] 
W0723 12:34:35.882648 2614518 out.go:239] [31m╭───────────────────────────────────────────────────────────────────────────────────────────╮[0m
[31m│[0m                                                                                           [31m│[0m
[31m│[0m    😿  If the above advice does not help, please let us know:                             [31m│[0m
[31m│[0m    👉  https://github.com/kubernetes/minikube/issues/new/choose                           [31m│[0m
[31m│[0m                                                                                           [31m│[0m
[31m│[0m    Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    [31m│[0m
[31m│[0m                                                                                           [31m│[0m
[31m╰───────────────────────────────────────────────────────────────────────────────────────────╯[0m
I0723 12:34:35.892506 2614518 out.go:177] 

* 
* ==> Docker <==
* Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=error msg="invalid key: \"format\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDformat\""
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"format\\\"\""
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=error msg="Failed to delete corrupt checkpoint for sandbox format\": invalid key: \"format\\\"\""
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=info msg="Both sandbox container and checkpoint could not be found with id \"format\\\"\". Proceed without further sandbox information."
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=error msg="invalid key: \"format\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDformat\""
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"format\\\"\""
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=error msg="CNI failed to delete loopback network: could not retrieve port mappings: invalid key: \"format\\\"\""
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=error msg="invalid key: \"format\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDformat\""
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"format\\\"\""
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=error msg="Failed to delete corrupt checkpoint for sandbox format\": invalid key: \"format\\\"\""
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=info msg="Both sandbox container and checkpoint could not be found with id \"format\\\"\". Proceed without further sandbox information."
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=error msg="invalid key: \"format\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDformat\""
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"format\\\"\""
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=error msg="CNI failed to delete loopback network: could not retrieve port mappings: invalid key: \"format\\\"\""
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=error msg="invalid key: \"format\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDformat\""
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"format\\\"\""
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=error msg="Failed to delete corrupt checkpoint for sandbox endpoint=\"/var/run/cri-dockerd.sock\": invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=info msg="Both sandbox container and checkpoint could not be found with id \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\". Proceed without further sandbox information."
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=error msg="invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDendpoint=\"/var/run/cri-dockerd.sock\""
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=error msg="CNI failed to delete loopback network: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=error msg="invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDendpoint=\"/var/run/cri-dockerd.sock\""
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=error msg="Failed to delete corrupt checkpoint for sandbox endpoint=\"/var/run/cri-dockerd.sock\": invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=info msg="Both sandbox container and checkpoint could not be found with id \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\". Proceed without further sandbox information."
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=error msg="invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDendpoint=\"/var/run/cri-dockerd.sock\""
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=error msg="CNI failed to delete loopback network: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=error msg="invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDendpoint=\"/var/run/cri-dockerd.sock\""
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=error msg="Failed to delete corrupt checkpoint for sandbox endpoint=\"/var/run/cri-dockerd.sock\": invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=info msg="Both sandbox container and checkpoint could not be found with id \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\". Proceed without further sandbox information."
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=error msg="invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDendpoint=\"/var/run/cri-dockerd.sock\""
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=error msg="CNI failed to delete loopback network: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=error msg="invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDendpoint=\"/var/run/cri-dockerd.sock\""
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=error msg="Failed to delete corrupt checkpoint for sandbox endpoint=\"/var/run/cri-dockerd.sock\": invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=info msg="Both sandbox container and checkpoint could not be found with id \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\". Proceed without further sandbox information."
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=error msg="invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDendpoint=\"/var/run/cri-dockerd.sock\""
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=error msg="CNI failed to delete loopback network: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=error msg="invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDendpoint=\"/var/run/cri-dockerd.sock\""
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=error msg="Failed to delete corrupt checkpoint for sandbox endpoint=\"/var/run/cri-dockerd.sock\": invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=info msg="Both sandbox container and checkpoint could not be found with id \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\". Proceed without further sandbox information."
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=error msg="invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDendpoint=\"/var/run/cri-dockerd.sock\""
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=error msg="CNI failed to delete loopback network: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=error msg="invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDendpoint=\"/var/run/cri-dockerd.sock\""
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=error msg="Failed to delete corrupt checkpoint for sandbox URL=\"unix:///var/run/cri-dockerd.sock\": invalid key: \"URL=\\\"unix:///var/run/cri-dockerd.sock\\\"\""
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=error msg="Failed to delete corrupt checkpoint for sandbox URL=\"unix:///var/run/cri-dockerd.sock\": invalid key: \"URL=\\\"unix:///var/run/cri-dockerd.sock\\\"\""
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=error msg="Failed to delete corrupt checkpoint for sandbox URL=\"unix:///var/run/cri-dockerd.sock\": invalid key: \"URL=\\\"unix:///var/run/cri-dockerd.sock\\\"\""
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=error msg="Failed to delete corrupt checkpoint for sandbox URL=\"unix:///var/run/cri-dockerd.sock\": invalid key: \"URL=\\\"unix:///var/run/cri-dockerd.sock\\\"\""
Jul 23 07:04:22 minikube cri-dockerd[1133]: time="2024-07-23T07:04:22Z" level=error msg="Failed to delete corrupt checkpoint for sandbox URL=\"unix:///var/run/cri-dockerd.sock\": invalid key: \"URL=\\\"unix:///var/run/cri-dockerd.sock\\\"\""
Jul 23 07:04:26 minikube cri-dockerd[1133]: time="2024-07-23T07:04:26Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/4c9c1098fbeadea12473f38ca657893ed3ed3d85ad8b26dbeaec5395924cf676/resolv.conf as [nameserver 192.168.49.1 options edns0 trust-ad ndots:0]"
Jul 23 07:04:27 minikube cri-dockerd[1133]: time="2024-07-23T07:04:27Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/b200d76853f08450a1d7c6d763535ca5ca74b445d8560eeee7ebf3d5fb57b230/resolv.conf as [nameserver 192.168.49.1 options edns0 trust-ad ndots:0]"
Jul 23 07:04:27 minikube cri-dockerd[1133]: time="2024-07-23T07:04:27Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/b8779679a68efe4eaf5d8f68771f4851344838537cb14735a964b96f3b03dfff/resolv.conf as [nameserver 192.168.49.1 options edns0 trust-ad ndots:0]"
Jul 23 07:04:27 minikube cri-dockerd[1133]: time="2024-07-23T07:04:27Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/3517982f99fb104f667703ba84cecf7521cbe1039f20e6cfaccc813a48bb86c9/resolv.conf as [nameserver 192.168.49.1 options ndots:0 edns0 trust-ad]"

* 
* ==> container status <==
* CONTAINER           IMAGE               CREATED             STATE               NAME                      ATTEMPT             POD ID              POD
53039c7666f89       10baa1ca17068       20 seconds ago      Running             kube-controller-manager   2                   3517982f99fb1       kube-controller-manager-minikube
2a71e3fc906a9       5374347291230       20 seconds ago      Running             kube-apiserver            2                   b8779679a68ef       kube-apiserver-minikube
28a28a1c9da00       6d1b4fd1b182d       20 seconds ago      Running             kube-scheduler            2                   b200d76853f08       kube-scheduler-minikube
f10fd82782060       73deb9a3f7025       20 seconds ago      Running             etcd                      2                   4c9c1098fbead       etcd-minikube

* 
* ==> describe nodes <==
* Name:               minikube
Roles:              control-plane
Labels:             beta.kubernetes.io/arch=amd64
                    beta.kubernetes.io/os=linux
                    kubernetes.io/arch=amd64
                    kubernetes.io/hostname=minikube
                    kubernetes.io/os=linux
                    minikube.k8s.io/commit=8220a6eb95f0a4d75f7f2d7b14cef975f050512d
                    minikube.k8s.io/name=minikube
                    minikube.k8s.io/primary=true
                    minikube.k8s.io/updated_at=2024_07_23T12_34_35_0700
                    minikube.k8s.io/version=v1.32.0
                    node-role.kubernetes.io/control-plane=
                    node.kubernetes.io/exclude-from-external-load-balancers=
Annotations:        kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/cri-dockerd.sock
                    node.alpha.kubernetes.io/ttl: 0
                    volumes.kubernetes.io/controller-managed-attach-detach: true
CreationTimestamp:  Tue, 23 Jul 2024 07:04:31 +0000
Taints:             <none>
Unschedulable:      false
Lease:
  HolderIdentity:  minikube
  AcquireTime:     <unset>
  RenewTime:       Tue, 23 Jul 2024 07:04:45 +0000
Conditions:
  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message
  ----             ------  -----------------                 ------------------                ------                       -------
  MemoryPressure   False   Tue, 23 Jul 2024 07:04:35 +0000   Tue, 23 Jul 2024 07:04:29 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available
  DiskPressure     False   Tue, 23 Jul 2024 07:04:35 +0000   Tue, 23 Jul 2024 07:04:29 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure
  PIDPressure      False   Tue, 23 Jul 2024 07:04:35 +0000   Tue, 23 Jul 2024 07:04:29 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available
  Ready            True    Tue, 23 Jul 2024 07:04:35 +0000   Tue, 23 Jul 2024 07:04:35 +0000   KubeletReady                 kubelet is posting ready status
Addresses:
  InternalIP:  192.168.49.2
  Hostname:    minikube
Capacity:
  cpu:                4
  ephemeral-storage:  171436296Ki
  hugepages-1Gi:      0
  hugepages-2Mi:      0
  memory:             8031816Ki
  pods:               110
Allocatable:
  cpu:                4
  ephemeral-storage:  171436296Ki
  hugepages-1Gi:      0
  hugepages-2Mi:      0
  memory:             8031816Ki
  pods:               110
System Info:
  Machine ID:                 13eaab1c32104b22b4702dc025cfe4df
  System UUID:                b85ee07e-63d1-48b3-b7e8-a1da24acf6f0
  Boot ID:                    69e7b800-9283-4c4b-a603-c85199061df9
  Kernel Version:             5.15.0-113-generic
  OS Image:                   Ubuntu 22.04.3 LTS
  Operating System:           linux
  Architecture:               amd64
  Container Runtime Version:  docker://24.0.7
  Kubelet Version:            v1.28.3
  Kube-Proxy Version:         v1.28.3
PodCIDR:                      10.244.0.0/24
PodCIDRs:                     10.244.0.0/24
Non-terminated Pods:          (4 in total)
  Namespace                   Name                                CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age
  ---------                   ----                                ------------  ----------  ---------------  -------------  ---
  kube-system                 etcd-minikube                       100m (2%!)(MISSING)     0 (0%!)(MISSING)      100Mi (1%!)(MISSING)       0 (0%!)(MISSING)         12s
  kube-system                 kube-apiserver-minikube             250m (6%!)(MISSING)     0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         12s
  kube-system                 kube-controller-manager-minikube    200m (5%!)(MISSING)     0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         12s
  kube-system                 kube-scheduler-minikube             100m (2%!)(MISSING)     0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         12s
Allocated resources:
  (Total limits may be over 100 percent, i.e., overcommitted.)
  Resource           Requests    Limits
  --------           --------    ------
  cpu                650m (16%!)(MISSING)  0 (0%!)(MISSING)
  memory             100Mi (1%!)(MISSING)  0 (0%!)(MISSING)
  ephemeral-storage  0 (0%!)(MISSING)      0 (0%!)(MISSING)
  hugepages-1Gi      0 (0%!)(MISSING)      0 (0%!)(MISSING)
  hugepages-2Mi      0 (0%!)(MISSING)      0 (0%!)(MISSING)
Events:
  Type    Reason                   Age                From             Message
  ----    ------                   ----               ----             -------
  Normal  NodeHasSufficientMemory  21s (x8 over 21s)  kubelet          Node minikube status is now: NodeHasSufficientMemory
  Normal  NodeHasNoDiskPressure    21s (x8 over 21s)  kubelet          Node minikube status is now: NodeHasNoDiskPressure
  Normal  NodeHasSufficientPID     21s (x7 over 21s)  kubelet          Node minikube status is now: NodeHasSufficientPID
  Normal  NodeAllocatableEnforced  21s                kubelet          Updated Node Allocatable limit across pods
  Normal  Starting                 12s                kubelet          Starting kubelet.
  Normal  NodeHasSufficientMemory  12s                kubelet          Node minikube status is now: NodeHasSufficientMemory
  Normal  NodeHasNoDiskPressure    12s                kubelet          Node minikube status is now: NodeHasNoDiskPressure
  Normal  NodeHasSufficientPID     12s                kubelet          Node minikube status is now: NodeHasSufficientPID
  Normal  NodeNotReady             12s                kubelet          Node minikube status is now: NodeNotReady
  Normal  NodeAllocatableEnforced  12s                kubelet          Updated Node Allocatable limit across pods
  Normal  NodeReady                12s                kubelet          Node minikube status is now: NodeReady
  Normal  RegisteredNode           0s                 node-controller  Node minikube event: Registered Node minikube in Controller

* 
* ==> dmesg <==
* [Jul22 02:52] wmi_bus wmi_bus-PNP0C14:00: WQBC data block query control method not found
[  +0.020030] i801_smbus 0000:00:1f.3: Accelerometer lis3lv02d is present on SMBus but its address is unknown, skipping registration
[  +0.202695] i801_smbus 0000:00:1f.3: Transaction timeout
[  +0.203995] i801_smbus 0000:00:1f.3: Transaction timeout
[  +1.733289] systemd[1]: Configuration file /run/systemd/system/netplan-ovs-cleanup.service is marked world-inaccessible. This has no effect as configuration data is accessible via APIs without restrictions. Proceeding anyway.
[  +0.043139] systemd[1]: /lib/systemd/system/grafana-server.service:42: Unknown key name 'ProtectProc' in section 'Service', ignoring.
[  +0.174559] systemd-journald[264]: File /var/log/journal/7bc8d6437f8b425b9ecc942788f48020/system.journal corrupted or uncleanly shut down, renaming and replacing.
[  +0.807007] dell-smbios A80593CE-A997-11DA-B012-B622A1EF5492: WMI SMBIOS userspace interface not supported(0), try upgrading to a newer BIOS
[  +0.177889] wl: loading out-of-tree module taints kernel.
[  +0.000008] wl: module license 'MIXED/Proprietary' taints kernel.
[  +0.000002] Disabling lock debugging due to kernel taint
[ +10.231119] kauditd_printk_skb: 45 callbacks suppressed
[  +2.552786] powercap intel-rapl:0: package locked by BIOS, monitoring only
[ +10.020465] systemd-journald[264]: File /var/log/journal/7bc8d6437f8b425b9ecc942788f48020/user-1000.journal corrupted or uncleanly shut down, renaming and replacing.
[Jul22 04:56] xhci_hcd 0000:00:14.0: xHC error in resume, USBSTS 0x411, Reinit
[  +1.723500] acpi device:40: Cannot transition to power state D3hot for parent in (unknown)
[  +0.001578] acpi PNP0501:00: Still not present
[  +0.014146] done.
[Jul22 04:58] psmouse serio1: DualPoint TouchPad at isa0060/serio1/input0 lost sync at byte 1
[  +0.001049] psmouse serio1: DualPoint TouchPad at isa0060/serio1/input0 lost sync at byte 1
[  +0.001015] psmouse serio1: DualPoint TouchPad at isa0060/serio1/input0 lost sync at byte 1
[  +0.001040] psmouse serio1: DualPoint TouchPad at isa0060/serio1/input0 lost sync at byte 1
[  +0.001104] psmouse serio1: DualPoint TouchPad at isa0060/serio1/input0 lost sync at byte 1
[  +0.000958] psmouse serio1: DualPoint TouchPad at isa0060/serio1/input0 lost sync at byte 1
[Jul22 14:24] xhci_hcd 0000:00:14.0: xHC error in resume, USBSTS 0x411, Reinit
[  +1.720839] acpi device:40: Cannot transition to power state D3hot for parent in (unknown)
[  +0.001555] acpi PNP0501:00: Still not present
[  +0.002033] done.
[Jul22 18:50] xhci_hcd 0000:00:14.0: xHC error in resume, USBSTS 0x411, Reinit
[  +1.828967] acpi device:40: Cannot transition to power state D3hot for parent in (unknown)
[  +0.010301] acpi PNP0501:00: Still not present
[  +0.007200] done.
[Jul23 04:47] xhci_hcd 0000:00:14.0: xHC error in resume, USBSTS 0x411, Reinit
[Jul23 04:48] done.
[  +0.021878] acpi device:40: Cannot transition to power state D3hot for parent in (unknown)
[  +0.001184] acpi PNP0501:00: Still not present

* 
* ==> etcd [f10fd8278206] <==
* {"level":"warn","ts":"2024-07-23T07:04:27.333775Z","caller":"embed/config.go:673","msg":"Running http and grpc server on single port. This is not recommended for production."}
{"level":"info","ts":"2024-07-23T07:04:27.333856Z","caller":"etcdmain/etcd.go:73","msg":"Running: ","args":["etcd","--advertise-client-urls=https://192.168.49.2:2379","--cert-file=/var/lib/minikube/certs/etcd/server.crt","--client-cert-auth=true","--data-dir=/var/lib/minikube/etcd","--experimental-initial-corrupt-check=true","--experimental-watch-progress-notify-interval=5s","--initial-advertise-peer-urls=https://192.168.49.2:2380","--initial-cluster=minikube=https://192.168.49.2:2380","--key-file=/var/lib/minikube/certs/etcd/server.key","--listen-client-urls=https://127.0.0.1:2379,https://192.168.49.2:2379","--listen-metrics-urls=http://127.0.0.1:2381","--listen-peer-urls=https://192.168.49.2:2380","--name=minikube","--peer-cert-file=/var/lib/minikube/certs/etcd/peer.crt","--peer-client-cert-auth=true","--peer-key-file=/var/lib/minikube/certs/etcd/peer.key","--peer-trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt","--proxy-refresh-interval=70000","--snapshot-count=10000","--trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt"]}
{"level":"warn","ts":"2024-07-23T07:04:27.33403Z","caller":"embed/config.go:673","msg":"Running http and grpc server on single port. This is not recommended for production."}
{"level":"info","ts":"2024-07-23T07:04:27.33406Z","caller":"embed/etcd.go:127","msg":"configuring peer listeners","listen-peer-urls":["https://192.168.49.2:2380"]}
{"level":"info","ts":"2024-07-23T07:04:27.335286Z","caller":"embed/etcd.go:495","msg":"starting with peer TLS","tls-info":"cert = /var/lib/minikube/certs/etcd/peer.crt, key = /var/lib/minikube/certs/etcd/peer.key, client-cert=, client-key=, trusted-ca = /var/lib/minikube/certs/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2024-07-23T07:04:27.336038Z","caller":"embed/etcd.go:135","msg":"configuring client listeners","listen-client-urls":["https://127.0.0.1:2379","https://192.168.49.2:2379"]}
{"level":"info","ts":"2024-07-23T07:04:27.336176Z","caller":"embed/etcd.go:309","msg":"starting an etcd server","etcd-version":"3.5.9","git-sha":"bdbbde998","go-version":"go1.19.9","go-os":"linux","go-arch":"amd64","max-cpu-set":4,"max-cpu-available":4,"member-initialized":false,"name":"minikube","data-dir":"/var/lib/minikube/etcd","wal-dir":"","wal-dir-dedicated":"","member-dir":"/var/lib/minikube/etcd/member","force-new-cluster":false,"heartbeat-interval":"100ms","election-timeout":"1s","initial-election-tick-advance":true,"snapshot-count":10000,"max-wals":5,"max-snapshots":5,"snapshot-catchup-entries":5000,"initial-advertise-peer-urls":["https://192.168.49.2:2380"],"listen-peer-urls":["https://192.168.49.2:2380"],"advertise-client-urls":["https://192.168.49.2:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://192.168.49.2:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"],"cors":["*"],"host-whitelist":["*"],"initial-cluster":"minikube=https://192.168.49.2:2380","initial-cluster-state":"new","initial-cluster-token":"etcd-cluster","quota-backend-bytes":2147483648,"max-request-bytes":1572864,"max-concurrent-streams":4294967295,"pre-vote":true,"initial-corrupt-check":true,"corrupt-check-time-interval":"0s","compact-check-time-enabled":false,"compact-check-time-interval":"1m0s","auto-compaction-mode":"periodic","auto-compaction-retention":"0s","auto-compaction-interval":"0s","discovery-url":"","discovery-proxy":"","downgrade-check-interval":"5s"}
{"level":"info","ts":"2024-07-23T07:04:27.359967Z","caller":"etcdserver/backend.go:81","msg":"opened backend db","path":"/var/lib/minikube/etcd/member/snap/db","took":"23.520464ms"}
{"level":"info","ts":"2024-07-23T07:04:27.437005Z","caller":"etcdserver/raft.go:495","msg":"starting local member","local-member-id":"aec36adc501070cc","cluster-id":"fa54960ea34d58be"}
{"level":"info","ts":"2024-07-23T07:04:27.437124Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc switched to configuration voters=()"}
{"level":"info","ts":"2024-07-23T07:04:27.437176Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became follower at term 0"}
{"level":"info","ts":"2024-07-23T07:04:27.4372Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"newRaft aec36adc501070cc [peers: [], term: 0, commit: 0, applied: 0, lastindex: 0, lastterm: 0]"}
{"level":"info","ts":"2024-07-23T07:04:27.437214Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became follower at term 1"}
{"level":"info","ts":"2024-07-23T07:04:27.437286Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc switched to configuration voters=(12593026477526642892)"}
{"level":"warn","ts":"2024-07-23T07:04:27.477243Z","caller":"auth/store.go:1238","msg":"simple token is not cryptographically signed"}
{"level":"info","ts":"2024-07-23T07:04:27.492113Z","caller":"mvcc/kvstore.go:393","msg":"kvstore restored","current-rev":1}
{"level":"info","ts":"2024-07-23T07:04:27.508078Z","caller":"etcdserver/quota.go:94","msg":"enabled backend quota with default value","quota-name":"v3-applier","quota-size-bytes":2147483648,"quota-size":"2.1 GB"}
{"level":"info","ts":"2024-07-23T07:04:27.53407Z","caller":"etcdserver/server.go:854","msg":"starting etcd server","local-member-id":"aec36adc501070cc","local-server-version":"3.5.9","cluster-version":"to_be_decided"}
{"level":"info","ts":"2024-07-23T07:04:27.534279Z","caller":"fileutil/purge.go:44","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/snap","suffix":"snap.db","max":5,"interval":"30s"}
{"level":"info","ts":"2024-07-23T07:04:27.534377Z","caller":"etcdserver/server.go:738","msg":"started as single-node; fast-forwarding election ticks","local-member-id":"aec36adc501070cc","forward-ticks":9,"forward-duration":"900ms","election-ticks":10,"election-timeout":"1s"}
{"level":"info","ts":"2024-07-23T07:04:27.534397Z","caller":"fileutil/purge.go:44","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/snap","suffix":"snap","max":5,"interval":"30s"}
{"level":"info","ts":"2024-07-23T07:04:27.534431Z","caller":"fileutil/purge.go:44","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/wal","suffix":"wal","max":5,"interval":"30s"}
{"level":"info","ts":"2024-07-23T07:04:27.540198Z","caller":"embed/etcd.go:726","msg":"starting with client TLS","tls-info":"cert = /var/lib/minikube/certs/etcd/server.crt, key = /var/lib/minikube/certs/etcd/server.key, client-cert=, client-key=, trusted-ca = /var/lib/minikube/certs/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2024-07-23T07:04:27.540291Z","caller":"embed/etcd.go:597","msg":"serving peer traffic","address":"192.168.49.2:2380"}
{"level":"info","ts":"2024-07-23T07:04:27.540346Z","caller":"embed/etcd.go:569","msg":"cmux::serve","address":"192.168.49.2:2380"}
{"level":"info","ts":"2024-07-23T07:04:27.540463Z","caller":"embed/etcd.go:278","msg":"now serving peer/client/metrics","local-member-id":"aec36adc501070cc","initial-advertise-peer-urls":["https://192.168.49.2:2380"],"listen-peer-urls":["https://192.168.49.2:2380"],"advertise-client-urls":["https://192.168.49.2:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://192.168.49.2:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"]}
{"level":"info","ts":"2024-07-23T07:04:27.540504Z","caller":"embed/etcd.go:855","msg":"serving metrics","address":"http://127.0.0.1:2381"}
{"level":"info","ts":"2024-07-23T07:04:27.551949Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc switched to configuration voters=(12593026477526642892)"}
{"level":"info","ts":"2024-07-23T07:04:27.552106Z","caller":"membership/cluster.go:421","msg":"added member","cluster-id":"fa54960ea34d58be","local-member-id":"aec36adc501070cc","added-peer-id":"aec36adc501070cc","added-peer-peer-urls":["https://192.168.49.2:2380"]}
{"level":"info","ts":"2024-07-23T07:04:27.552157Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc is starting a new election at term 1"}
{"level":"info","ts":"2024-07-23T07:04:27.552172Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became pre-candidate at term 1"}
{"level":"info","ts":"2024-07-23T07:04:27.552196Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc received MsgPreVoteResp from aec36adc501070cc at term 1"}
{"level":"info","ts":"2024-07-23T07:04:27.552219Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became candidate at term 2"}
{"level":"info","ts":"2024-07-23T07:04:27.552231Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc received MsgVoteResp from aec36adc501070cc at term 2"}
{"level":"info","ts":"2024-07-23T07:04:27.552247Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became leader at term 2"}
{"level":"info","ts":"2024-07-23T07:04:27.552261Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"raft.node: aec36adc501070cc elected leader aec36adc501070cc at term 2"}
{"level":"info","ts":"2024-07-23T07:04:27.559476Z","caller":"etcdserver/server.go:2571","msg":"setting up initial cluster version using v2 API","cluster-version":"3.5"}
{"level":"info","ts":"2024-07-23T07:04:27.566477Z","caller":"embed/serve.go:103","msg":"ready to serve client requests"}
{"level":"info","ts":"2024-07-23T07:04:27.566486Z","caller":"embed/serve.go:103","msg":"ready to serve client requests"}
{"level":"info","ts":"2024-07-23T07:04:27.567533Z","caller":"embed/serve.go:250","msg":"serving client traffic securely","traffic":"grpc+http","address":"127.0.0.1:2379"}
{"level":"info","ts":"2024-07-23T07:04:27.56648Z","caller":"etcdserver/server.go:2062","msg":"published local member to cluster through raft","local-member-id":"aec36adc501070cc","local-member-attributes":"{Name:minikube ClientURLs:[https://192.168.49.2:2379]}","request-path":"/0/members/aec36adc501070cc/attributes","cluster-id":"fa54960ea34d58be","publish-timeout":"7s"}
{"level":"info","ts":"2024-07-23T07:04:27.569084Z","caller":"etcdmain/main.go:44","msg":"notifying init daemon"}
{"level":"info","ts":"2024-07-23T07:04:27.569112Z","caller":"etcdmain/main.go:50","msg":"successfully notified init daemon"}
{"level":"info","ts":"2024-07-23T07:04:27.576736Z","caller":"membership/cluster.go:584","msg":"set initial cluster version","cluster-id":"fa54960ea34d58be","local-member-id":"aec36adc501070cc","cluster-version":"3.5"}
{"level":"info","ts":"2024-07-23T07:04:27.576857Z","caller":"api/capability.go:75","msg":"enabled capabilities for version","cluster-version":"3.5"}
{"level":"info","ts":"2024-07-23T07:04:27.576889Z","caller":"etcdserver/server.go:2595","msg":"cluster version is updated","cluster-version":"3.5"}
{"level":"info","ts":"2024-07-23T07:04:27.579165Z","caller":"embed/serve.go:250","msg":"serving client traffic securely","traffic":"grpc+http","address":"192.168.49.2:2379"}

* 
* ==> kernel <==
*  07:04:47 up 4 days, 18:36,  0 users,  load average: 2.40, 2.02, 1.60
Linux minikube 5.15.0-113-generic #123~20.04.1-Ubuntu SMP Wed Jun 12 17:33:13 UTC 2024 x86_64 x86_64 x86_64 GNU/Linux
PRETTY_NAME="Ubuntu 22.04.3 LTS"

* 
* ==> kube-apiserver [2a71e3fc906a] <==
* I0723 07:04:31.061850       1 secure_serving.go:213] Serving securely on [::]:8443
I0723 07:04:31.061954       1 controller.go:80] Starting OpenAPI V3 AggregationController
I0723 07:04:31.062103       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
I0723 07:04:31.062300       1 gc_controller.go:78] Starting apiserver lease garbage collector
I0723 07:04:31.062322       1 handler_discovery.go:412] Starting ResourceDiscoveryManager
I0723 07:04:31.062544       1 controller.go:78] Starting OpenAPI AggregationController
I0723 07:04:31.062762       1 dynamic_serving_content.go:132] "Starting controller" name="aggregator-proxy-cert::/var/lib/minikube/certs/front-proxy-client.crt::/var/lib/minikube/certs/front-proxy-client.key"
I0723 07:04:31.062804       1 cluster_authentication_trust_controller.go:440] Starting cluster_authentication_trust_controller controller
I0723 07:04:31.062817       1 shared_informer.go:311] Waiting for caches to sync for cluster_authentication_trust_controller
I0723 07:04:31.062846       1 available_controller.go:423] Starting AvailableConditionController
I0723 07:04:31.062863       1 cache.go:32] Waiting for caches to sync for AvailableConditionController controller
I0723 07:04:31.062301       1 apiservice_controller.go:97] Starting APIServiceRegistrationController
I0723 07:04:31.062898       1 cache.go:32] Waiting for caches to sync for APIServiceRegistrationController controller
I0723 07:04:31.063002       1 apf_controller.go:372] Starting API Priority and Fairness config controller
I0723 07:04:31.063400       1 customresource_discovery_controller.go:289] Starting DiscoveryController
I0723 07:04:31.063476       1 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/var/lib/minikube/certs/ca.crt"
I0723 07:04:31.063583       1 dynamic_cafile_content.go:157] "Starting controller" name="request-header::/var/lib/minikube/certs/front-proxy-ca.crt"
I0723 07:04:31.062245       1 gc_controller.go:78] Starting apiserver lease garbage collector
I0723 07:04:31.062887       1 aggregator.go:164] waiting for initial CRD sync...
I0723 07:04:31.064297       1 crdregistration_controller.go:111] Starting crd-autoregister controller
I0723 07:04:31.064317       1 shared_informer.go:311] Waiting for caches to sync for crd-autoregister
I0723 07:04:31.064529       1 controller.go:134] Starting OpenAPI controller
I0723 07:04:31.064598       1 controller.go:85] Starting OpenAPI V3 controller
I0723 07:04:31.064640       1 naming_controller.go:291] Starting NamingConditionController
I0723 07:04:31.064671       1 establishing_controller.go:76] Starting EstablishingController
I0723 07:04:31.064708       1 nonstructuralschema_controller.go:192] Starting NonStructuralSchemaConditionController
I0723 07:04:31.064738       1 apiapproval_controller.go:186] Starting KubernetesAPIApprovalPolicyConformantConditionController
I0723 07:04:31.064765       1 crd_finalizer.go:266] Starting CRDFinalizer
I0723 07:04:31.065075       1 controller.go:116] Starting legacy_token_tracking_controller
I0723 07:04:31.065255       1 shared_informer.go:311] Waiting for caches to sync for configmaps
I0723 07:04:31.062226       1 system_namespaces_controller.go:67] Starting system namespaces controller
I0723 07:04:31.257549       1 shared_informer.go:318] Caches are synced for node_authorizer
I0723 07:04:31.264001       1 cache.go:39] Caches are synced for APIServiceRegistrationController controller
I0723 07:04:31.267222       1 shared_informer.go:318] Caches are synced for crd-autoregister
I0723 07:04:31.272489       1 aggregator.go:166] initial CRD sync complete...
I0723 07:04:31.272662       1 autoregister_controller.go:141] Starting autoregister controller
I0723 07:04:31.272782       1 cache.go:32] Waiting for caches to sync for autoregister controller
I0723 07:04:31.272882       1 cache.go:39] Caches are synced for autoregister controller
I0723 07:04:31.284090       1 shared_informer.go:318] Caches are synced for configmaps
I0723 07:04:31.284780       1 apf_controller.go:377] Running API Priority and Fairness config worker
I0723 07:04:31.284798       1 apf_controller.go:380] Running API Priority and Fairness periodic rebalancing process
I0723 07:04:31.286877       1 shared_informer.go:318] Caches are synced for cluster_authentication_trust_controller
I0723 07:04:31.287089       1 cache.go:39] Caches are synced for AvailableConditionController controller
I0723 07:04:31.290403       1 controller.go:624] quota admission added evaluator for: namespaces
E0723 07:04:31.367290       1 controller.go:145] while syncing ConfigMap "kube-system/kube-apiserver-legacy-service-account-token-tracking", err: namespaces "kube-system" not found
I0723 07:04:31.383553       1 controller.go:624] quota admission added evaluator for: leases.coordination.k8s.io
I0723 07:04:32.072029       1 storage_scheduling.go:95] created PriorityClass system-node-critical with value 2000001000
I0723 07:04:32.080881       1 storage_scheduling.go:95] created PriorityClass system-cluster-critical with value 2000000000
I0723 07:04:32.080900       1 storage_scheduling.go:111] all system priority classes are created successfully or already exist.
I0723 07:04:33.282863       1 controller.go:624] quota admission added evaluator for: roles.rbac.authorization.k8s.io
I0723 07:04:33.355714       1 controller.go:624] quota admission added evaluator for: rolebindings.rbac.authorization.k8s.io
I0723 07:04:33.527914       1 alloc.go:330] "allocated clusterIPs" service="default/kubernetes" clusterIPs={"IPv4":"10.96.0.1"}
W0723 07:04:33.540910       1 lease.go:263] Resetting endpoints for master service "kubernetes" to [192.168.49.2]
I0723 07:04:33.542309       1 controller.go:624] quota admission added evaluator for: endpoints
I0723 07:04:33.553786       1 controller.go:624] quota admission added evaluator for: endpointslices.discovery.k8s.io
I0723 07:04:34.191164       1 controller.go:624] quota admission added evaluator for: serviceaccounts
I0723 07:04:35.149840       1 controller.go:624] quota admission added evaluator for: deployments.apps
I0723 07:04:35.190976       1 alloc.go:330] "allocated clusterIPs" service="kube-system/kube-dns" clusterIPs={"IPv4":"10.96.0.10"}
I0723 07:04:35.208014       1 controller.go:624] quota admission added evaluator for: daemonsets.apps
I0723 07:04:47.547072       1 controller.go:624] quota admission added evaluator for: replicasets.apps

* 
* ==> kube-controller-manager [53039c7666f8] <==
* I0723 07:04:47.049979       1 shared_informer.go:311] Waiting for caches to sync for cronjob
I0723 07:04:47.062175       1 controllermanager.go:642] "Started controller" controller="persistentvolumeclaim-protection-controller"
I0723 07:04:47.062385       1 pvc_protection_controller.go:102] "Starting PVC protection controller"
I0723 07:04:47.062397       1 shared_informer.go:311] Waiting for caches to sync for PVC protection
I0723 07:04:47.086486       1 controllermanager.go:642] "Started controller" controller="serviceaccount-controller"
I0723 07:04:47.086667       1 serviceaccounts_controller.go:111] "Starting service account controller"
I0723 07:04:47.086690       1 shared_informer.go:311] Waiting for caches to sync for service account
I0723 07:04:47.102404       1 controllermanager.go:642] "Started controller" controller="persistentvolume-attach-detach-controller"
I0723 07:04:47.107965       1 attach_detach_controller.go:337] "Starting attach detach controller"
I0723 07:04:47.107996       1 shared_informer.go:311] Waiting for caches to sync for attach detach
I0723 07:04:47.110547       1 shared_informer.go:311] Waiting for caches to sync for resource quota
I0723 07:04:47.128188       1 actual_state_of_world.go:547] "Failed to update statusUpdateNeeded field in actual state of world" err="Failed to set statusUpdateNeeded to needed true, because nodeName=\"minikube\" does not exist"
I0723 07:04:47.154861       1 shared_informer.go:318] Caches are synced for TTL
I0723 07:04:47.157836       1 shared_informer.go:318] Caches are synced for node
I0723 07:04:47.158098       1 range_allocator.go:174] "Sending events to api server"
I0723 07:04:47.158250       1 range_allocator.go:178] "Starting range CIDR allocator"
I0723 07:04:47.158537       1 shared_informer.go:311] Waiting for caches to sync for cidrallocator
I0723 07:04:47.158793       1 shared_informer.go:318] Caches are synced for cidrallocator
I0723 07:04:47.158722       1 shared_informer.go:318] Caches are synced for cronjob
I0723 07:04:47.158802       1 shared_informer.go:318] Caches are synced for namespace
I0723 07:04:47.158756       1 shared_informer.go:318] Caches are synced for TTL after finished
I0723 07:04:47.166335       1 shared_informer.go:318] Caches are synced for stateful set
I0723 07:04:47.168326       1 shared_informer.go:318] Caches are synced for expand
I0723 07:04:47.173883       1 shared_informer.go:318] Caches are synced for endpoint
I0723 07:04:47.174607       1 shared_informer.go:311] Waiting for caches to sync for garbage collector
I0723 07:04:47.180844       1 shared_informer.go:318] Caches are synced for GC
I0723 07:04:47.184560       1 range_allocator.go:380] "Set node PodCIDR" node="minikube" podCIDRs=["10.244.0.0/24"]
I0723 07:04:47.187078       1 shared_informer.go:318] Caches are synced for service account
I0723 07:04:47.188538       1 shared_informer.go:318] Caches are synced for HPA
I0723 07:04:47.193900       1 shared_informer.go:318] Caches are synced for ReplicationController
I0723 07:04:47.194148       1 shared_informer.go:318] Caches are synced for deployment
I0723 07:04:47.195448       1 shared_informer.go:318] Caches are synced for daemon sets
I0723 07:04:47.195857       1 shared_informer.go:318] Caches are synced for bootstrap_signer
I0723 07:04:47.207048       1 shared_informer.go:318] Caches are synced for persistent volume
I0723 07:04:47.209425       1 shared_informer.go:318] Caches are synced for PV protection
I0723 07:04:47.218255       1 shared_informer.go:318] Caches are synced for ReplicaSet
I0723 07:04:47.220508       1 shared_informer.go:318] Caches are synced for ClusterRoleAggregator
I0723 07:04:47.234150       1 shared_informer.go:318] Caches are synced for job
I0723 07:04:47.251442       1 shared_informer.go:318] Caches are synced for disruption
I0723 07:04:47.251526       1 shared_informer.go:318] Caches are synced for certificate-csrsigning-legacy-unknown
I0723 07:04:47.251555       1 shared_informer.go:318] Caches are synced for crt configmap
I0723 07:04:47.251584       1 shared_informer.go:318] Caches are synced for certificate-csrsigning-kubelet-serving
I0723 07:04:47.251653       1 shared_informer.go:318] Caches are synced for certificate-csrsigning-kube-apiserver-client
I0723 07:04:47.251686       1 shared_informer.go:318] Caches are synced for certificate-csrsigning-kubelet-client
I0723 07:04:47.260385       1 shared_informer.go:318] Caches are synced for taint
I0723 07:04:47.260520       1 node_lifecycle_controller.go:1225] "Initializing eviction metric for zone" zone=""
I0723 07:04:47.260682       1 node_lifecycle_controller.go:877] "Missing timestamp for Node. Assuming now as a timestamp" node="minikube"
I0723 07:04:47.260751       1 node_lifecycle_controller.go:1071] "Controller detected that zone is now in new state" zone="" newState="Normal"
I0723 07:04:47.260914       1 taint_manager.go:206] "Starting NoExecuteTaintManager"
I0723 07:04:47.260988       1 taint_manager.go:211] "Sending events to api server"
I0723 07:04:47.261248       1 event.go:307] "Event occurred" object="minikube" fieldPath="" kind="Node" apiVersion="v1" type="Normal" reason="RegisteredNode" message="Node minikube event: Registered Node minikube in Controller"
I0723 07:04:47.264227       1 shared_informer.go:318] Caches are synced for ephemeral
I0723 07:04:47.264504       1 shared_informer.go:318] Caches are synced for PVC protection
I0723 07:04:47.293025       1 shared_informer.go:318] Caches are synced for certificate-csrapproving
I0723 07:04:47.313044       1 shared_informer.go:318] Caches are synced for resource quota
I0723 07:04:47.316141       1 shared_informer.go:318] Caches are synced for endpoint_slice_mirroring
I0723 07:04:47.333677       1 shared_informer.go:318] Caches are synced for endpoint_slice
I0723 07:04:47.348585       1 shared_informer.go:318] Caches are synced for resource quota
I0723 07:04:47.408351       1 shared_informer.go:318] Caches are synced for attach detach
I0723 07:04:47.555920       1 event.go:307] "Event occurred" object="kube-system/coredns" fieldPath="" kind="Deployment" apiVersion="apps/v1" type="Normal" reason="ScalingReplicaSet" message="Scaled up replica set coredns-5dd5756b68 to 2"

* 
* ==> kube-scheduler [28a28a1c9da0] <==
* W0723 07:04:31.097551       1 authentication.go:370] To require authentication configuration lookup to succeed, set --authentication-tolerate-lookup-failure=false
I0723 07:04:31.292547       1 server.go:154] "Starting Kubernetes Scheduler" version="v1.28.3"
I0723 07:04:31.292781       1 server.go:156] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0723 07:04:31.295140       1 configmap_cafile_content.go:202] "Starting controller" name="client-ca::kube-system::extension-apiserver-authentication::client-ca-file"
I0723 07:04:31.295166       1 shared_informer.go:311] Waiting for caches to sync for client-ca::kube-system::extension-apiserver-authentication::client-ca-file
I0723 07:04:31.303494       1 secure_serving.go:213] Serving securely on 127.0.0.1:10259
I0723 07:04:31.304250       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
W0723 07:04:31.304535       1 reflector.go:535] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
W0723 07:04:31.307227       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
E0723 07:04:31.307260       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PodDisruptionBudget: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
W0723 07:04:31.307372       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
E0723 07:04:31.307387       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Namespace: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
W0723 07:04:31.307461       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
E0723 07:04:31.307473       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PersistentVolumeClaim: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
W0723 07:04:31.307536       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
E0723 07:04:31.307546       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSINode: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
W0723 07:04:31.307711       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
E0723 07:04:31.307723       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.StorageClass: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
W0723 07:04:31.307772       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
E0723 07:04:31.307781       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PersistentVolume: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
W0723 07:04:31.307821       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
E0723 07:04:31.307829       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Pod: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
E0723 07:04:31.304718       1 reflector.go:147] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
W0723 07:04:31.368941       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
E0723 07:04:31.369111       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.ReplicaSet: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
W0723 07:04:31.369257       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
E0723 07:04:31.369320       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Service: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
W0723 07:04:31.369451       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
E0723 07:04:31.369513       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
W0723 07:04:31.369837       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
E0723 07:04:31.369926       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.StatefulSet: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
W0723 07:04:31.370052       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
E0723 07:04:31.370119       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSIStorageCapacity: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
W0723 07:04:31.370478       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
E0723 07:04:31.370568       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.ReplicationController: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
W0723 07:04:31.370660       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
E0723 07:04:31.370759       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Node: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
W0723 07:04:32.166232       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
E0723 07:04:32.166272       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSINode: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
W0723 07:04:32.173976       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
E0723 07:04:32.174014       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PersistentVolume: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
W0723 07:04:32.277422       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
E0723 07:04:32.277459       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PodDisruptionBudget: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
W0723 07:04:32.317977       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
W0723 07:04:32.318001       1 reflector.go:535] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
E0723 07:04:32.318024       1 reflector.go:147] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
E0723 07:04:32.318023       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Pod: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
W0723 07:04:32.332909       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
E0723 07:04:32.332940       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.ReplicaSet: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
W0723 07:04:32.430386       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
E0723 07:04:32.430419       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Namespace: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
W0723 07:04:32.506949       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
E0723 07:04:32.506982       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.StatefulSet: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
W0723 07:04:32.580415       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
E0723 07:04:32.580447       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.StorageClass: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
W0723 07:04:32.634377       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
E0723 07:04:32.634428       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Service: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
W0723 07:04:32.753549       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
E0723 07:04:32.753583       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PersistentVolumeClaim: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
I0723 07:04:35.495335       1 shared_informer.go:318] Caches are synced for client-ca::kube-system::extension-apiserver-authentication::client-ca-file

* 
* ==> kubelet <==
* Jul 23 07:04:35 minikube kubelet[4444]: I0723 07:04:35.265182    4444 volume_manager.go:291] "Starting Kubelet Volume Manager"
Jul 23 07:04:35 minikube kubelet[4444]: I0723 07:04:35.265612    4444 desired_state_of_world_populator.go:151] "Desired state populator starts to run"
Jul 23 07:04:35 minikube kubelet[4444]: I0723 07:04:35.273602    4444 reconciler_new.go:29] "Reconciler: start to sync state"
Jul 23 07:04:35 minikube kubelet[4444]: I0723 07:04:35.286182    4444 kubelet_network_linux.go:50] "Initialized iptables rules." protocol="IPv4"
Jul 23 07:04:35 minikube kubelet[4444]: I0723 07:04:35.287277    4444 kubelet_network_linux.go:50] "Initialized iptables rules." protocol="IPv6"
Jul 23 07:04:35 minikube kubelet[4444]: I0723 07:04:35.287346    4444 status_manager.go:217] "Starting to sync pod status with apiserver"
Jul 23 07:04:35 minikube kubelet[4444]: I0723 07:04:35.287367    4444 kubelet.go:2303] "Starting kubelet main sync loop"
Jul 23 07:04:35 minikube kubelet[4444]: E0723 07:04:35.287413    4444 kubelet.go:2327] "Skipping pod synchronization" err="[container runtime status check may not have completed yet, PLEG is not healthy: pleg has yet to be successful]"
Jul 23 07:04:35 minikube kubelet[4444]: I0723 07:04:35.379427    4444 kubelet_node_status.go:70] "Attempting to register node" node="minikube"
Jul 23 07:04:35 minikube kubelet[4444]: E0723 07:04:35.387483    4444 kubelet.go:2327] "Skipping pod synchronization" err="container runtime status check may not have completed yet"
Jul 23 07:04:35 minikube kubelet[4444]: I0723 07:04:35.413250    4444 kubelet_node_status.go:108] "Node was previously registered" node="minikube"
Jul 23 07:04:35 minikube kubelet[4444]: I0723 07:04:35.413378    4444 kubelet_node_status.go:73] "Successfully registered node" node="minikube"
Jul 23 07:04:35 minikube kubelet[4444]: I0723 07:04:35.471509    4444 setters.go:552] "Node became not ready" node="minikube" condition={"type":"Ready","status":"False","lastHeartbeatTime":"2024-07-23T07:04:35Z","lastTransitionTime":"2024-07-23T07:04:35Z","reason":"KubeletNotReady","message":"container runtime status check may not have completed yet"}
Jul 23 07:04:35 minikube kubelet[4444]: E0723 07:04:35.587949    4444 kubelet.go:2327] "Skipping pod synchronization" err="container runtime status check may not have completed yet"
Jul 23 07:04:35 minikube kubelet[4444]: I0723 07:04:35.590555    4444 cpu_manager.go:214] "Starting CPU manager" policy="none"
Jul 23 07:04:35 minikube kubelet[4444]: I0723 07:04:35.590871    4444 cpu_manager.go:215] "Reconciling" reconcilePeriod="10s"
Jul 23 07:04:35 minikube kubelet[4444]: I0723 07:04:35.590911    4444 state_mem.go:36] "Initialized new in-memory state store"
Jul 23 07:04:35 minikube kubelet[4444]: I0723 07:04:35.591502    4444 state_mem.go:88] "Updated default CPUSet" cpuSet=""
Jul 23 07:04:35 minikube kubelet[4444]: I0723 07:04:35.591547    4444 state_mem.go:96] "Updated CPUSet assignments" assignments={}
Jul 23 07:04:35 minikube kubelet[4444]: I0723 07:04:35.591560    4444 policy_none.go:49] "None policy: Start"
Jul 23 07:04:35 minikube kubelet[4444]: I0723 07:04:35.597759    4444 memory_manager.go:169] "Starting memorymanager" policy="None"
Jul 23 07:04:35 minikube kubelet[4444]: I0723 07:04:35.597969    4444 state_mem.go:35] "Initializing new in-memory state store"
Jul 23 07:04:35 minikube kubelet[4444]: I0723 07:04:35.598362    4444 state_mem.go:75] "Updated machine memory state"
Jul 23 07:04:35 minikube kubelet[4444]: I0723 07:04:35.600574    4444 manager.go:471] "Failed to read data from checkpoint" checkpoint="kubelet_internal_checkpoint" err="checkpoint is not found"
Jul 23 07:04:35 minikube kubelet[4444]: I0723 07:04:35.601890    4444 plugin_manager.go:118] "Starting Kubelet Plugin Manager"
Jul 23 07:04:35 minikube kubelet[4444]: I0723 07:04:35.689338    4444 kubelet_node_status.go:493] "Fast updating node status as it just became ready"
Jul 23 07:04:35 minikube kubelet[4444]: E0723 07:04:35.873742    4444 cri_stats_provider.go:675] "Unable to fetch container log stats" err="failed to get fsstats for \"/var/log/pods/kube-system_kube-apiserver-minikube_55b4bbe24dac3803a7379f9ae169d6ba/kube-apiserver/0.log\": no such file or directory" containerName="kube-apiserver"
Jul 23 07:04:35 minikube kubelet[4444]: E0723 07:04:35.873872    4444 cri_stats_provider.go:675] "Unable to fetch container log stats" err="failed to get fsstats for \"/var/log/pods/kube-system_kube-controller-manager-minikube_7da72fc2e2cfb27aacf6cffd1c72da00/kube-controller-manager/0.log\": no such file or directory" containerName="kube-controller-manager"
Jul 23 07:04:35 minikube kubelet[4444]: E0723 07:04:35.873986    4444 cri_stats_provider.go:675] "Unable to fetch container log stats" err="failed to get fsstats for \"/var/log/pods/kube-system_etcd-minikube_9aac5b5c8815def09a2ef9e37b89da55/etcd/0.log\": no such file or directory" containerName="etcd"
Jul 23 07:04:35 minikube kubelet[4444]: E0723 07:04:35.874081    4444 cri_stats_provider.go:675] "Unable to fetch container log stats" err="failed to get fsstats for \"/var/log/pods/kube-system_kube-scheduler-minikube_75ac196d3709dde303d8a81c035c2c28/kube-scheduler/0.log\": no such file or directory" containerName="kube-scheduler"
Jul 23 07:04:35 minikube kubelet[4444]: I0723 07:04:35.988674    4444 topology_manager.go:215] "Topology Admit Handler" podUID="9aac5b5c8815def09a2ef9e37b89da55" podNamespace="kube-system" podName="etcd-minikube"
Jul 23 07:04:35 minikube kubelet[4444]: I0723 07:04:35.988891    4444 topology_manager.go:215] "Topology Admit Handler" podUID="55b4bbe24dac3803a7379f9ae169d6ba" podNamespace="kube-system" podName="kube-apiserver-minikube"
Jul 23 07:04:35 minikube kubelet[4444]: I0723 07:04:35.989100    4444 topology_manager.go:215] "Topology Admit Handler" podUID="7da72fc2e2cfb27aacf6cffd1c72da00" podNamespace="kube-system" podName="kube-controller-manager-minikube"
Jul 23 07:04:35 minikube kubelet[4444]: I0723 07:04:35.989246    4444 topology_manager.go:215] "Topology Admit Handler" podUID="75ac196d3709dde303d8a81c035c2c28" podNamespace="kube-system" podName="kube-scheduler-minikube"
Jul 23 07:04:36 minikube kubelet[4444]: I0723 07:04:36.077833    4444 reconciler_common.go:258] "operationExecutor.VerifyControllerAttachedVolume started for volume \"ca-certs\" (UniqueName: \"kubernetes.io/host-path/7da72fc2e2cfb27aacf6cffd1c72da00-ca-certs\") pod \"kube-controller-manager-minikube\" (UID: \"7da72fc2e2cfb27aacf6cffd1c72da00\") " pod="kube-system/kube-controller-manager-minikube"
Jul 23 07:04:36 minikube kubelet[4444]: I0723 07:04:36.078080    4444 reconciler_common.go:258] "operationExecutor.VerifyControllerAttachedVolume started for volume \"etc-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/7da72fc2e2cfb27aacf6cffd1c72da00-etc-ca-certificates\") pod \"kube-controller-manager-minikube\" (UID: \"7da72fc2e2cfb27aacf6cffd1c72da00\") " pod="kube-system/kube-controller-manager-minikube"
Jul 23 07:04:36 minikube kubelet[4444]: I0723 07:04:36.078238    4444 reconciler_common.go:258] "operationExecutor.VerifyControllerAttachedVolume started for volume \"k8s-certs\" (UniqueName: \"kubernetes.io/host-path/55b4bbe24dac3803a7379f9ae169d6ba-k8s-certs\") pod \"kube-apiserver-minikube\" (UID: \"55b4bbe24dac3803a7379f9ae169d6ba\") " pod="kube-system/kube-apiserver-minikube"
Jul 23 07:04:36 minikube kubelet[4444]: I0723 07:04:36.078357    4444 reconciler_common.go:258] "operationExecutor.VerifyControllerAttachedVolume started for volume \"usr-local-share-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/55b4bbe24dac3803a7379f9ae169d6ba-usr-local-share-ca-certificates\") pod \"kube-apiserver-minikube\" (UID: \"55b4bbe24dac3803a7379f9ae169d6ba\") " pod="kube-system/kube-apiserver-minikube"
Jul 23 07:04:36 minikube kubelet[4444]: I0723 07:04:36.078479    4444 reconciler_common.go:258] "operationExecutor.VerifyControllerAttachedVolume started for volume \"usr-local-share-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/7da72fc2e2cfb27aacf6cffd1c72da00-usr-local-share-ca-certificates\") pod \"kube-controller-manager-minikube\" (UID: \"7da72fc2e2cfb27aacf6cffd1c72da00\") " pod="kube-system/kube-controller-manager-minikube"
Jul 23 07:04:36 minikube kubelet[4444]: I0723 07:04:36.078625    4444 reconciler_common.go:258] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kubeconfig\" (UniqueName: \"kubernetes.io/host-path/75ac196d3709dde303d8a81c035c2c28-kubeconfig\") pod \"kube-scheduler-minikube\" (UID: \"75ac196d3709dde303d8a81c035c2c28\") " pod="kube-system/kube-scheduler-minikube"
Jul 23 07:04:36 minikube kubelet[4444]: I0723 07:04:36.078702    4444 reconciler_common.go:258] "operationExecutor.VerifyControllerAttachedVolume started for volume \"etcd-data\" (UniqueName: \"kubernetes.io/host-path/9aac5b5c8815def09a2ef9e37b89da55-etcd-data\") pod \"etcd-minikube\" (UID: \"9aac5b5c8815def09a2ef9e37b89da55\") " pod="kube-system/etcd-minikube"
Jul 23 07:04:36 minikube kubelet[4444]: I0723 07:04:36.078812    4444 reconciler_common.go:258] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kubeconfig\" (UniqueName: \"kubernetes.io/host-path/7da72fc2e2cfb27aacf6cffd1c72da00-kubeconfig\") pod \"kube-controller-manager-minikube\" (UID: \"7da72fc2e2cfb27aacf6cffd1c72da00\") " pod="kube-system/kube-controller-manager-minikube"
Jul 23 07:04:36 minikube kubelet[4444]: I0723 07:04:36.078892    4444 reconciler_common.go:258] "operationExecutor.VerifyControllerAttachedVolume started for volume \"usr-share-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/7da72fc2e2cfb27aacf6cffd1c72da00-usr-share-ca-certificates\") pod \"kube-controller-manager-minikube\" (UID: \"7da72fc2e2cfb27aacf6cffd1c72da00\") " pod="kube-system/kube-controller-manager-minikube"
Jul 23 07:04:36 minikube kubelet[4444]: I0723 07:04:36.078970    4444 reconciler_common.go:258] "operationExecutor.VerifyControllerAttachedVolume started for volume \"etcd-certs\" (UniqueName: \"kubernetes.io/host-path/9aac5b5c8815def09a2ef9e37b89da55-etcd-certs\") pod \"etcd-minikube\" (UID: \"9aac5b5c8815def09a2ef9e37b89da55\") " pod="kube-system/etcd-minikube"
Jul 23 07:04:36 minikube kubelet[4444]: I0723 07:04:36.079072    4444 reconciler_common.go:258] "operationExecutor.VerifyControllerAttachedVolume started for volume \"flexvolume-dir\" (UniqueName: \"kubernetes.io/host-path/7da72fc2e2cfb27aacf6cffd1c72da00-flexvolume-dir\") pod \"kube-controller-manager-minikube\" (UID: \"7da72fc2e2cfb27aacf6cffd1c72da00\") " pod="kube-system/kube-controller-manager-minikube"
Jul 23 07:04:36 minikube kubelet[4444]: I0723 07:04:36.079166    4444 reconciler_common.go:258] "operationExecutor.VerifyControllerAttachedVolume started for volume \"usr-share-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/55b4bbe24dac3803a7379f9ae169d6ba-usr-share-ca-certificates\") pod \"kube-apiserver-minikube\" (UID: \"55b4bbe24dac3803a7379f9ae169d6ba\") " pod="kube-system/kube-apiserver-minikube"
Jul 23 07:04:36 minikube kubelet[4444]: I0723 07:04:36.079275    4444 reconciler_common.go:258] "operationExecutor.VerifyControllerAttachedVolume started for volume \"k8s-certs\" (UniqueName: \"kubernetes.io/host-path/7da72fc2e2cfb27aacf6cffd1c72da00-k8s-certs\") pod \"kube-controller-manager-minikube\" (UID: \"7da72fc2e2cfb27aacf6cffd1c72da00\") " pod="kube-system/kube-controller-manager-minikube"
Jul 23 07:04:36 minikube kubelet[4444]: I0723 07:04:36.079466    4444 reconciler_common.go:258] "operationExecutor.VerifyControllerAttachedVolume started for volume \"ca-certs\" (UniqueName: \"kubernetes.io/host-path/55b4bbe24dac3803a7379f9ae169d6ba-ca-certs\") pod \"kube-apiserver-minikube\" (UID: \"55b4bbe24dac3803a7379f9ae169d6ba\") " pod="kube-system/kube-apiserver-minikube"
Jul 23 07:04:36 minikube kubelet[4444]: I0723 07:04:36.079639    4444 reconciler_common.go:258] "operationExecutor.VerifyControllerAttachedVolume started for volume \"etc-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/55b4bbe24dac3803a7379f9ae169d6ba-etc-ca-certificates\") pod \"kube-apiserver-minikube\" (UID: \"55b4bbe24dac3803a7379f9ae169d6ba\") " pod="kube-system/kube-apiserver-minikube"
Jul 23 07:04:36 minikube kubelet[4444]: I0723 07:04:36.215411    4444 apiserver.go:52] "Watching apiserver"
Jul 23 07:04:36 minikube kubelet[4444]: I0723 07:04:36.268916    4444 desired_state_of_world_populator.go:159] "Finished populating initial desired state of world"
Jul 23 07:04:36 minikube kubelet[4444]: I0723 07:04:36.358814    4444 pod_startup_latency_tracker.go:102] "Observed pod startup duration" pod="kube-system/kube-apiserver-minikube" podStartSLOduration=1.358760295 podCreationTimestamp="2024-07-23 07:04:35 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2024-07-23 07:04:36.338009857 +0000 UTC m=+1.236550747" watchObservedRunningTime="2024-07-23 07:04:36.358760295 +0000 UTC m=+1.257301163"
Jul 23 07:04:36 minikube kubelet[4444]: I0723 07:04:36.358996    4444 pod_startup_latency_tracker.go:102] "Observed pod startup duration" pod="kube-system/etcd-minikube" podStartSLOduration=1.35895718 podCreationTimestamp="2024-07-23 07:04:35 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2024-07-23 07:04:36.358739642 +0000 UTC m=+1.257280532" watchObservedRunningTime="2024-07-23 07:04:36.35895718 +0000 UTC m=+1.257498044"
Jul 23 07:04:36 minikube kubelet[4444]: I0723 07:04:36.396557    4444 pod_startup_latency_tracker.go:102] "Observed pod startup duration" pod="kube-system/kube-controller-manager-minikube" podStartSLOduration=1.396502114 podCreationTimestamp="2024-07-23 07:04:35 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2024-07-23 07:04:36.378542309 +0000 UTC m=+1.277083180" watchObservedRunningTime="2024-07-23 07:04:36.396502114 +0000 UTC m=+1.295042986"
Jul 23 07:04:36 minikube kubelet[4444]: I0723 07:04:36.412543    4444 pod_startup_latency_tracker.go:102] "Observed pod startup duration" pod="kube-system/kube-scheduler-minikube" podStartSLOduration=1.412501735 podCreationTimestamp="2024-07-23 07:04:35 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2024-07-23 07:04:36.396873817 +0000 UTC m=+1.295414682" watchObservedRunningTime="2024-07-23 07:04:36.412501735 +0000 UTC m=+1.311042597"
Jul 23 07:04:45 minikube kubelet[4444]: E0723 07:04:45.932151    4444 cri_stats_provider.go:675] "Unable to fetch container log stats" err="failed to get fsstats for \"/var/log/pods/kube-system_kube-apiserver-minikube_55b4bbe24dac3803a7379f9ae169d6ba/kube-apiserver/1.log\": no such file or directory" containerName="kube-apiserver"
Jul 23 07:04:45 minikube kubelet[4444]: E0723 07:04:45.932249    4444 cri_stats_provider.go:675] "Unable to fetch container log stats" err="failed to get fsstats for \"/var/log/pods/kube-system_kube-scheduler-minikube_75ac196d3709dde303d8a81c035c2c28/kube-scheduler/0.log\": no such file or directory" containerName="kube-scheduler"
Jul 23 07:04:45 minikube kubelet[4444]: E0723 07:04:45.932324    4444 cri_stats_provider.go:675] "Unable to fetch container log stats" err="failed to get fsstats for \"/var/log/pods/kube-system_kube-controller-manager-minikube_7da72fc2e2cfb27aacf6cffd1c72da00/kube-controller-manager/0.log\": no such file or directory" containerName="kube-controller-manager"
Jul 23 07:04:45 minikube kubelet[4444]: E0723 07:04:45.932387    4444 cri_stats_provider.go:675] "Unable to fetch container log stats" err="failed to get fsstats for \"/var/log/pods/kube-system_etcd-minikube_9aac5b5c8815def09a2ef9e37b89da55/etcd/0.log\": no such file or directory" containerName="etcd"
Jul 23 07:04:47 minikube kubelet[4444]: I0723 07:04:47.815519    4444 topology_manager.go:215] "Topology Admit Handler" podUID="9b8503bf-a232-49ea-85ed-a5a9578b10be" podNamespace="kube-system" podName="kube-proxy-zmhmx"

